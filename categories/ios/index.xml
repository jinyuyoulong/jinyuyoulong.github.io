<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iOS on 为吾优</title>
    <link>https://blog.v5u.win/categories/ios/</link>
    <description>Recent content in iOS on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 05 Jun 2019 10:37:16 +0800</lastBuildDate>
    
	<atom:link href="https://blog.v5u.win/categories/ios/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>iOS SwiftUI</title>
      <link>https://blog.v5u.win/post/ios-swiftui/</link>
      <pubDate>Wed, 05 Jun 2019 10:37:16 +0800</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-swiftui/</guid>
      <description>[TOC] 什么是swiftUI？ Apple的解释： 更好的应用。更少的代码。 SwiftUI是一种创新的，非常简单的方法，可以通过Swift的强大功能在</description>
    </item>
    
    <item>
      <title>Xcode-debug-view-hierarchy</title>
      <link>https://blog.v5u.win/post/xcode-debug-view-hierarchy/</link>
      <pubDate>Fri, 03 Aug 2018 10:34:49 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-debug-view-hierarchy/</guid>
      <description>Xcode 教程之调试视图层次结构 Xcode开发，当我们需要调整/检查UI时正确的处理方式是什么？ 答案：debug view hierarchy P.s. 下面是为什么要使用debug view</description>
    </item>
    
    <item>
      <title>xcode 头文件引用</title>
      <link>https://blog.v5u.win/post/xcode-include-import/</link>
      <pubDate>Thu, 12 Apr 2018 03:43:53 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-include-import/</guid>
      <description>头文件引用 头文件引用主要由#include 和#import 两种。每种又分为尖括号(&amp;lt;&amp;gt;)引用和双引号(&amp;rdquo; &amp;ldquo</description>
    </item>
    
    <item>
      <title>xcode文档注释规则简要汇总</title>
      <link>https://blog.v5u.win/post/xcode-mark-for-appledoc/</link>
      <pubDate>Wed, 04 Apr 2018 08:24:46 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-mark-for-appledoc/</guid>
      <description>xcode文档注释规则简要汇总 参考源 类与协议 /** 文档B. * * 文档B的详细描述. */ @interface DocB : NSObject /// 文档A. @interface DocA : NSObject 文本链接 /** * - [文档B](DocB)</description>
    </item>
    
    <item>
      <title>appledoc使用说明</title>
      <link>https://blog.v5u.win/post/ios-appledoc/</link>
      <pubDate>Wed, 04 Apr 2018 07:00:34 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-appledoc/</guid>
      <description>appledoc使用说明 安装命令行： git clone git://github.com/tomaz/appledoc.git cd ./appledoc sudo sh install-appledoc.sh appledoc —version //检查successed 使用 生成HTML 当需要html文档时，可以加</description>
    </item>
    
    <item>
      <title>iOS indexPath.item vs indexPath.row</title>
      <link>https://blog.v5u.win/post/ios-indexpath-item-vs-indexpath-row/</link>
      <pubDate>Mon, 02 Apr 2018 06:25:02 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-indexpath-item-vs-indexpath-row/</guid>
      <description>Inside NSIndexPath, the indexes are stored in a simple c array called &amp;ldquo;_indexes&amp;rdquo; defined as NSUInteger* and the length of the array is stored in &amp;ldquo;_length&amp;rdquo; defined as NSUInteger. The accessor &amp;ldquo;section&amp;rdquo; is an alias to &amp;ldquo;_indexes[0]&amp;rdquo; and both &amp;ldquo;item&amp;rdquo; and &amp;ldquo;row&amp;rdquo; are aliases to &amp;ldquo;_indexes[1]&amp;rdquo;. Thus the two are functionally identical. In terms of programming style – and perhaps the definition chain – you would be better using &amp;ldquo;row&amp;rdquo;</description>
    </item>
    
    <item>
      <title>swift中weak和unowned的区别</title>
      <link>https://blog.v5u.win/post/swift-weakunowned/</link>
      <pubDate>Tue, 13 Dec 2016 16:34:00 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/swift-weakunowned/</guid>
      <description>weak和unowned都是解决循环引用的关键字 区别： 如果您是一直写 Objective-C 过来的，那么从表面的行为上来说 unowned 更像以前的 unsafe_unretai</description>
    </item>
    
    <item>
      <title>swift 关键字篇</title>
      <link>https://blog.v5u.win/post/swift-%E5%85%B3%E9%94%AE%E5%AD%97/</link>
      <pubDate>Tue, 13 Dec 2016 15:45:27 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/swift-%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
      <description>@noescape：no escape(没有逃脱) 用来修饰闭包，含义为非逃逸闭包。 当闭包作为参数传递进函数时，如果这个闭包只在函数中被使用，则</description>
    </item>
    
    <item>
      <title>CocoaPods</title>
      <link>https://blog.v5u.win/post/mac-cocoapods/</link>
      <pubDate>Wed, 26 Oct 2016 10:37:38 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-cocoapods/</guid>
      <description>.podspec文件是做什么的 .podspec文件描述了一个库将怎样被添加进工程中。.podspec文件可以标识该第三方库所需要的源码文件、</description>
    </item>
    
    <item>
      <title>Xcode实用快捷键收集</title>
      <link>https://blog.v5u.win/post/xcode-%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Tue, 20 Sep 2016 13:51:51 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>整行移动 option+commend+[] 当前页快速定位：ctl+6 项目中file间快速定位：shift+cmd+o 删除光标右边的字符：Ctrl+D 删除本行：Ctrl+K 光</description>
    </item>
    
    <item>
      <title>Swift3更改</title>
      <link>https://blog.v5u.win/post/swift-swift3%E6%9B%B4%E6%94%B9/</link>
      <pubDate>Sun, 18 Sep 2016 13:51:51 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/swift-swift3%E6%9B%B4%E6%94%B9/</guid>
      <description>升级Swift3后代码的更改差异 before after error as NSError error UIColor().blackColor() UIColor().balck xxx.hidden xxx.isHidden 所有的bool属性，都+前缀：is private fileprivate NSBundle Bundle func fetchInfo(complete: () -&amp;gt; ()) {} func fetchInfo(_ complete: () -&amp;gt; ()) {} function的参</description>
    </item>
    
    <item>
      <title>objective-c代码规范</title>
      <link>https://blog.v5u.win/post/ios-oc-code-style/</link>
      <pubDate>Thu, 25 Aug 2016 16:45:01 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-oc-code-style/</guid>
      <description>Objective-C代码规范 前言 Apple公司提供了一些代码规范文档。如果有内容未在此文档中提及，请参考如下内容： The Objective-C Programming Language Cocoa Fundamentals Guide Coding Guidelines for Cocoa iOS</description>
    </item>
    
    <item>
      <title>Workspace的使用方法</title>
      <link>https://blog.v5u.win/post/xcode-workspace/</link>
      <pubDate>Thu, 21 Jul 2016 16:39:53 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-workspace/</guid>
      <description>更改 xcode-&amp;gt; Preference -&amp;gt; Location -&amp;gt; Advanced -&amp;gt; Custom -&amp;gt; Relative to Workspace 新建Workspace 新建项目或静态库，选择 add workspace name 引入路径依赖，User Header Search Paths 设为 $(BUILT_PRODUCTS_DIR) 选择递归搜索 recursive 检查 scheme manage 中的项</description>
    </item>
    
    <item>
      <title>JavaScriptCore</title>
      <link>https://blog.v5u.win/post/ios-javascriptcore/</link>
      <pubDate>Fri, 29 Apr 2016 17:43:54 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-javascriptcore/</guid>
      <description>JavaScript 和OC原生交互 - (void)ocCallJSFunction{ JSContext context = [[JSContext alloc]init]; JSValue jsValue = [context evaluateScript:@&amp;quot;21+7&amp;quot;]; int iVal = [jsValue toInt32]; NSLog(@&amp;quot;js value=%@,int=%d&amp;quot;,jsValue, iVal); [context evaluateScript:@&amp;quot;var arr = [21, 7, &#39;fanyiqing.com&#39;];&amp;quot;]; JSValue jsArr = context[@&amp;quot;arr&amp;quot;]; NSLog(@&amp;quot;JS Array:%@ length:%@&amp;quot;,jsArr,jsArr[@&amp;quot;length&amp;quot;]); jsArr[1] = @&amp;quot;blog&amp;quot;; jsArr[7] = @7; NSLog(@&amp;quot;JS Array:%@, length:%d&amp;quot;,jsArr,[jsArr[@&amp;quot;length&amp;quot;] toInt32]); NSArray nsarray = [jsArr toArray]; NSLog(@&amp;quot;nsarray:%@&amp;quot;,nsarray); }</description>
    </item>
    
    <item>
      <title>iOS GCD dispatch barrier</title>
      <link>https://blog.v5u.win/post/ios-gcd-dispatch-barrier/</link>
      <pubDate>Fri, 15 Apr 2016 10:15:25 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-gcd-dispatch-barrier/</guid>
      <description>需求： 两个线程并行执行，当两线程都执行完后，在执行另一个线程，然后在执行并行多线程 thread1 thread4 --&amp;amp;gt; thread3 --&amp;amp;gt; thread2 thread5 一个dispatch barrier 允许在一个并发队列中创</description>
    </item>
    
    <item>
      <title>Xcode7 恢复代码折叠功能</title>
      <link>https://blog.v5u.win/post/xcode-xcode7-code-hidden/</link>
      <pubDate>Fri, 08 Apr 2016 18:14:53 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-xcode7-code-hidden/</guid>
      <description>升级到Xcode7后，发现代码折叠功能不见了！！！ 苹果默认把这个功能禁掉了：在Xcode菜单里选择Preference——Text Editi</description>
    </item>
    
    <item>
      <title>Xcode7.3 cannot create __weak reference in file using</title>
      <link>https://blog.v5u.win/post/xcode-xcode7-3-cannot-create-weak-reference-in-file-using/</link>
      <pubDate>Fri, 08 Apr 2016 16:26:43 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-xcode7-3-cannot-create-weak-reference-in-file-using/</guid>
      <description>升级xcode7.3后项目编译不通过 error：cannot create __weak reference in file using manual reference counting 解决办法： Set Build Settings -&amp;gt; Apple LLVM 7.1 - Language - Objective C -&amp;gt; Weak References in Manual Retain Release to YES.</description>
    </item>
    
    <item>
      <title>xcode设置允许访问http请求</title>
      <link>https://blog.v5u.win/post/xcode-http/</link>
      <pubDate>Sun, 03 Apr 2016 14:30:54 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-http/</guid>
      <description>项目的info.plist文件添加一下值： App Transport Security Settings Allow Arbitrary Loads 设为YES</description>
    </item>
    
    <item>
      <title>iOS老应用显示不完全</title>
      <link>https://blog.v5u.win/post/ios-screenview-error/</link>
      <pubDate>Sun, 03 Apr 2016 13:55:06 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-screenview-error/</guid>
      <description>解决 ： * 新建launchScreen文件 * 设置plist文件，添加Launch screen interface file base name字段 并将value值设为刚刚新建文件的文件名 *</description>
    </item>
    
    <item>
      <title>Xcode快捷键</title>
      <link>https://blog.v5u.win/post/xcode-shortcut-key/</link>
      <pubDate>Tue, 29 Mar 2016 23:50:12 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-shortcut-key/</guid>
      <description>常用xcode快捷键 整行移动 option+commend+[] 当前页快速定位：ctl+6 项目中file间快速定位：shift+cmd+o 删除光标右边的字符：Ctrl+D 删除</description>
    </item>
    
    <item>
      <title>react-native:unexpected token error</title>
      <link>https://blog.v5u.win/post/reactnative-unexpected-token-error/</link>
      <pubDate>Tue, 22 Mar 2016 17:11:47 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/reactnative-unexpected-token-error/</guid>
      <description>react-native新建的项目默认使用ES6写法，所以如果你在用到 componentWillMount:function()这样的代码时</description>
    </item>
    
    <item>
      <title>ReactNative如何真机测试</title>
      <link>https://blog.v5u.win/post/reactnative-device-test/</link>
      <pubDate>Fri, 18 Mar 2016 13:24:28 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/reactnative-device-test/</guid>
      <description>初始学习ReactNative 最想现在真机上一睹为快，对于非零基础的程序员，最重要的是先搞明白整个工程的创建到完结的流程，对于编程语言来说从</description>
    </item>
    
    <item>
      <title>ReactNative环境搭建</title>
      <link>https://blog.v5u.win/post/reactnative-install/</link>
      <pubDate>Fri, 18 Mar 2016 13:22:50 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/reactnative-install/</guid>
      <description>最近换了macbook，于是又要装node.js，记录一下 系统：OS X Mountain Lion 10.8.3 1/ 下载node.js for mac http://nodejs.org 双击安装，一路next，很简单。 `&amp;lt;/pre&amp;gt; 2/ 测</description>
    </item>
    
    <item>
      <title>React-Native 初次安装环境报错及解决记录</title>
      <link>https://blog.v5u.win/post/reactnative-first-install/</link>
      <pubDate>Tue, 15 Mar 2016 16:38:19 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/reactnative-first-install/</guid>
      <description>创建第一个项目后，打开xcode运行，terminal报错 Watchman: watchman&amp;ndash;no-pretty get-sockname returned with exit code null dyld: Library not loaded: /usr/local/opt/pcre/lib/libpcre.1.dylib 解决方案：终端输入 brew link pcre， 如果报错没有写入权限（C</description>
    </item>
    
    <item>
      <title>正确的使用KVO</title>
      <link>https://blog.v5u.win/post/ios-kvo/</link>
      <pubDate>Tue, 15 Mar 2016 11:02:37 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-kvo/</guid>
      <description>KVO，全称为Key-Value Observing，是iOS中的一种设计模式，用于检测对象的某些属性的实时变化情况并作出响应。网上广为流传普</description>
    </item>
    
    <item>
      <title>AFNetworking3.0/NSURLSession的优势</title>
      <link>https://blog.v5u.win/post/ios-afnetworking3.0-nsurlsession/</link>
      <pubDate>Tue, 15 Mar 2016 10:53:52 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-afnetworking3.0-nsurlsession/</guid>
      <description>很多时候，AFNetworking都是目前iOS开发者网络库中的不二选择。Github上2W+的star数足见其流行程度。而从iOS7.0开</description>
    </item>
    
    <item>
      <title>简单实用UIImagePickerViewController</title>
      <link>https://blog.v5u.win/post/ios-uiimagepickerviewcontroller/</link>
      <pubDate>Wed, 09 Mar 2016 13:31:36 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-uiimagepickerviewcontroller/</guid>
      <description>创建createVC UIImagePickerController* ipc = [[UIImagePickerController alloc] init]; ipc.sourceType = UIImagePickerControllerSourceTypePhotoLibrary; //图像来源 ipc.delegate = self; [self presentModalViewController:ipc animated:YES]; ```` 完善代理delegate方法 ```` //选择图片 //- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingImage:(UIImage *)image editingInfo:(NSDictionary *)editingInfo - (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info{ headView.image = [info objectForKey:@&amp;quot;UIImagePickerControllerOriginalImage&amp;quot;]; [picker</description>
    </item>
    
    <item>
      <title>Xcode7 如何设置访问某些权限时的alert内容</title>
      <link>https://blog.v5u.win/post/xcode-xcode7-rightalert/</link>
      <pubDate>Mon, 07 Mar 2016 18:28:25 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-xcode7-rightalert/</guid>
      <description>举个栗子: 我想访问用户的照片，第一次时会弹出alert框询问用户是否将该权限开放给APP 这时为了增加用户友好度，我们有必要在询问的时候加一些</description>
    </item>
    
    <item>
      <title>UIView何时创建加载subview比较合适？</title>
      <link>https://blog.v5u.win/post/ios-uiview-subview/</link>
      <pubDate>Mon, 07 Mar 2016 15:38:43 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-uiview-subview/</guid>
      <description>当我们使用ViewController的时候有ViewDidLoad方法保证数据或UI只加载一次 但是在UIView中 没有这样的生命周期函数 如</description>
    </item>
    
    <item>
      <title>Xcode7如何给新建的类名自动添加前缀</title>
      <link>https://blog.v5u.win/post/xcode-xcode7-prefix/</link>
      <pubDate>Thu, 03 Mar 2016 15:03:01 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-xcode7-prefix/</guid>
      <description>Xcode7如何给新建的类名自动添加前缀 一直想给新创建类的时候自动添加前缀比如这样:FFObject Xcode5之前是可以在项目刚创建的时候</description>
    </item>
    
    <item>
      <title>Xcode注释</title>
      <link>https://blog.v5u.win/post/xcode-notes/</link>
      <pubDate>Wed, 02 Mar 2016 15:49:43 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-notes/</guid>
      <description>Xcode注释 在所有的编程环境中 有几种通用的注释方式我们默认遵守他们的规则 它们是：TODO, FIXME, XXX, ??? , !!! 它们分别代表什么意思？ TODO: + 说明： 说明在</description>
    </item>
    
    <item>
      <title>braced block of statements is an unused closure</title>
      <link>https://blog.v5u.win/post/swift-braced-block-of-statements-is-an-unused-closure/</link>
      <pubDate>Tue, 01 Mar 2016 15:31:45 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/swift-braced-block-of-statements-is-an-unused-closure/</guid>
      <description>使用swift写dome时xcode报一下错误： braced block of statements is an unused closure 原因及收获： for循环的条件语句不能有空格，如：for i=0; i&amp;lt;3; i++ {} 其他控制语句也</description>
    </item>
    
    <item>
      <title>swift中的打印</title>
      <link>https://blog.v5u.win/post/swift-print/</link>
      <pubDate>Fri, 26 Feb 2016 14:57:35 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/swift-print/</guid>
      <description>自从swift2.0后 println 合并到了print，默认print()方法换行 如果不想换行可以使用，print(&amp;ldquo;print line&amp;rdquo;,terminator:&amp;ldquo;n&amp;rdquo;)</description>
    </item>
    
    <item>
      <title>OC Quartz2D 绘图</title>
      <link>https://blog.v5u.win/post/ios-oc-quartz2d/</link>
      <pubDate>Tue, 23 Feb 2016 12:07:20 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-oc-quartz2d/</guid>
      <description>如何利用Quartz2D绘制东西到view上? 首先,得有图形上下文,因为它能保存绘图信息,并且决定着绘制到什么地方去 其次,那个图形上下⽂必须</description>
    </item>
    
    <item>
      <title>iOS创建.a静态库文件</title>
      <link>https://blog.v5u.win/post/ios-a-library/</link>
      <pubDate>Mon, 22 Feb 2016 16:01:04 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-a-library/</guid>
      <description>步骤： 1.创建项目（选择Framework&amp;amp;Library） 2.删除无用文件，加入希望编译的文件 3.edit scheme &amp;ndash;&amp;gt;release 4.编译真机平台文件：选择io</description>
    </item>
    
    <item>
      <title>iOS 各类作用</title>
      <link>https://blog.v5u.win/post/ios-classes/</link>
      <pubDate>Tue, 16 Feb 2016 16:23:17 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-classes/</guid>
      <description>UIMenuController &amp;mdash;&amp;ndash;定制剪切，复制，粘贴组件。 UILabel &amp;mdash;&amp;mdash;&amp;ndash;文本显示 UIButton &amp;mdash;&amp;mdash;&amp;</description>
    </item>
    
    <item>
      <title>ios copy 和 mutableCopy</title>
      <link>https://blog.v5u.win/post/ios-copymutablecopy/</link>
      <pubDate>Mon, 18 Jan 2016 19:39:17 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-copymutablecopy/</guid>
      <description>通过copy方法可以创建可变对象或不可变对象的不可变副本，对于不可变副本，其对象的值不可以改变。 通过mutableCopy方法可以创建可变对</description>
    </item>
    
    <item>
      <title>NSString 位数不足补0</title>
      <link>https://blog.v5u.win/post/ios-nsstring-add-0/</link>
      <pubDate>Fri, 15 Jan 2016 16:22:44 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-nsstring-add-0/</guid>
      <description>%0nd ，n是多少位。0表示补0 如果是%nd，就是不满n位，自动补充空格。 NSString* testStr; intf = 12; testStr = [NSString stringWithFormat:@&amp;ldquo;%03d&amp;rdquo;,f]; NSLog(@&amp;ldquo;%@&amp;rdquo;,testStr);</description>
    </item>
    
    <item>
      <title>如何改变xcode 源文件的目录位置</title>
      <link>https://blog.v5u.win/post/xcode-%E5%A6%82%E4%BD%95%E6%94%B9%E5%8F%98xcode-%E6%BA%90%E6%96%87%E4%BB%B6%E7%9A%84%E7%9B%AE%E5%BD%95%E4%BD%8D%E7%BD%AE/</link>
      <pubDate>Mon, 11 Jan 2016 11:10:16 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-%E5%A6%82%E4%BD%95%E6%94%B9%E5%8F%98xcode-%E6%BA%90%E6%96%87%E4%BB%B6%E7%9A%84%E7%9B%AE%E5%BD%95%E4%BD%8D%E7%BD%AE/</guid>
      <description>很多时候会遇到这样的问题，项目中的文件，需要改变目录路径，但是呢，如果仅仅是将本地的文件移到目标目录下，重新编译项目会发现有很多的warnn</description>
    </item>
    
    <item>
      <title>计算中国农历</title>
      <link>https://blog.v5u.win/post/system-%E8%AE%A1%E7%AE%97%E5%86%9C%E5%8E%86/</link>
      <pubDate>Sun, 13 Dec 2015 15:14:46 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/system-%E8%AE%A1%E7%AE%97%E5%86%9C%E5%8E%86/</guid>
      <description>文章请查看：http://blog.csdn.net/orbit/article/details/9210413</description>
    </item>
    
    <item>
      <title>iOS键盘高度的官方获取方法</title>
      <link>https://blog.v5u.win/post/ios-keyboard-height/</link>
      <pubDate>Wed, 02 Dec 2015 14:54:36 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-keyboard-height/</guid>
      <description>处理键盘事件的正确方法是这样的：（包括获取键盘的高度以及键盘弹出和消失动画的时间） 1）在要使用键盘的视图控制器中，接收键盘事件的通知： [[NSNotificationCenter defaultCenter] addObserver:self</description>
    </item>
    
    <item>
      <title>Xcode7.1.1更新内容</title>
      <link>https://blog.v5u.win/post/xcode-xcode7.1.1-update-content/</link>
      <pubDate>Mon, 23 Nov 2015 11:25:15 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-xcode7.1.1-update-content/</guid>
      <description>Xcode 7.1.1 improves stability and fixes critical issues in interface Builder,debugging,and UI testing. Xcode 7.1 includes Swift2.1 and SDKs for iOS 9.1,watchOS 2,tvOS,and OS X 10.11 EI Capitan. Now you can go beyond the simulator to test your app on an iPad, iPhone, Apple TV, or Apple Watch - for free. Simply enter your Apple ID into the Accounts preference pane,then attach a device to your Mac using a Lightning</description>
    </item>
    
    <item>
      <title>gem 包管理器</title>
      <link>https://blog.v5u.win/post/system-gem%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</link>
      <pubDate>Thu, 12 Nov 2015 15:33:43 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/system-gem%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</guid>
      <description>gem 常用命令 查看软件源 gem source -l,不能翻墙的，建议改成国内的源 https://gems.ruby-china.com 移除某个源 gem sources --remove https://ruby.taobao.org/ 添加新的源 gem sources -a https://gems.ruby-china.com/ 安装 gem install [name] gem install cocoapods 卸载指定版本 sudo gem uninstall cocoapods --version=1.5.3 查看 gem</description>
    </item>
    
    <item>
      <title>SEL如何保存到NSArray数组中</title>
      <link>https://blog.v5u.win/post/ios-selnsarray/</link>
      <pubDate>Wed, 04 Nov 2015 11:09:43 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-selnsarray/</guid>
      <description>首先，SEL是不可以保存到array数组中去的。 其次，SEL有两种创建方法： SEL&amp;nbsp;s1&amp;nbsp;=&amp;nbsp;&amp;nbsp;@s</description>
    </item>
    
    <item>
      <title>Xcode 删除 Provisioning profile 证书</title>
      <link>https://blog.v5u.win/post/xcode-provisioning-profile/</link>
      <pubDate>Sat, 24 Oct 2015 20:09:12 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-provisioning-profile/</guid>
      <description>xcode 删除 Provisioning profile 证书存放路径：/Users/fans/Library/MobileDevice/Provisioning Profiles &amp;nbsp;</description>
    </item>
    
    <item>
      <title>Cannot find interface declaration for &#39;ClassA&#39;, superclass of &#39;ClassB&#39;</title>
      <link>https://blog.v5u.win/post/ios-cannot-find-interface-declaration-for-classa-superclass-of-classb/</link>
      <pubDate>Tue, 22 Sep 2015 11:49:57 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-cannot-find-interface-declaration-for-classa-superclass-of-classb/</guid>
      <description>这个error 是由于 头文件循环引用的原因，导致的。 只要删除其中一个class的头文件中的＃import引用，就会解决这个问题</description>
    </item>
    
    <item>
      <title>宏定义</title>
      <link>https://blog.v5u.win/post/system-%E5%AE%8F%E5%AE%9A%E4%B9%89/</link>
      <pubDate>Fri, 18 Sep 2015 15:50:23 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/system-%E5%AE%8F%E5%AE%9A%E4%B9%89/</guid>
      <description>#define DLOG( s, &amp;hellip; ) NSLog(@&amp;quot;&amp;lt; %@: (%d) &amp;gt; %@&amp;quot;,[[NSString stringWithUTF8String:FILE] lastPathComponent], LINE, [NSString stringWithFormat:(s), ##VA_ARGS]) 这个宏定义是用来在打印log的时候，调试使用，可以显示当前log所在的controller名字。 先写出来，原</description>
    </item>
    
    <item>
      <title>Objective-c NSClassFromString 使用方法</title>
      <link>https://blog.v5u.win/post/ios-oc-nsclassfromstring/</link>
      <pubDate>Mon, 14 Sep 2015 11:58:58 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-oc-nsclassfromstring/</guid>
      <description>NSClassFromString 是一个很有用的东西，尤其在进行 iPhone toolchain 的开发上。 正常来说， id&amp;nbsp;myObj&amp;nbsp;=&amp;nbsp;[[NSClassFromString(@&amp;quot;MySpecialClass&amp;quot;)&amp;nbsp;alloc]&amp;nbsp;init]; 和 id&amp;nbsp;myObj&amp;nbsp;=&amp;nbsp;[[MySpecialClass&amp;nbsp;alloc]&amp;nbsp;init]; 是一样的。但是，如果你的程序中并不存在 MySpecialClass 这个类，下面的写法会出错，而上面的写法</description>
    </item>
    
    <item>
      <title>app 上架前的打包准备</title>
      <link>https://blog.v5u.win/post/ios-appstore_public_archive/</link>
      <pubDate>Thu, 10 Sep 2015 15:22:12 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-appstore_public_archive/</guid>
      <description>app 上架前的打包准备 1.检查是否是外网环境 2.更新info.plist文件版本号 3.product&amp;mdash;&amp;gt;scheme&amp;mdash;-&amp;gt;eidt scheme&amp;mdash;&amp;gt; &amp;nbsp;&amp;nbsp; build configuration 改为 release 4.build setting&amp;mdash;&amp;gt;architectures &amp;ndash;&amp;gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; build active architecture only 设置为NO 5.build setting&amp;mdash;&amp;gt; code signing &amp;ndash;&amp;gt; &amp;nbsp;&amp;nbsp; Provisioning&amp;nbsp; Profile 设置</description>
    </item>
    
    <item>
      <title>NSDate和时间戳互转</title>
      <link>https://blog.v5u.win/post/ios-nsdate2timenumber/</link>
      <pubDate>Fri, 28 Aug 2015 16:53:17 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-nsdate2timenumber/</guid>
      <description>iOS 将时间NSDate转化为毫秒时间戳 对于将NSDate类型转换为时间戳，相信大家肯定都会，这样的示例代码，在百度等搜索引擎上面一搜索就是一大</description>
    </item>
    
    <item>
      <title>Unknown Class **** in Interface Builder file</title>
      <link>https://blog.v5u.win/post/ios-unknown-class-in-interface-builder-file/</link>
      <pubDate>Mon, 24 Aug 2015 10:44:12 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-unknown-class-in-interface-builder-file/</guid>
      <description>I added a UIView xib file using the root class of&amp;nbsp;MyView. I created it in the wrong place and so moved it in the project. Same project just a different folder/group. I then had a problem when running saying&amp;hellip; Unknown Class MyView in Interface Builder file I couldn&amp;#39;t work out what was wrong so I have now deleted the files both from the project and from the directory. I&amp;#39;ve done</description>
    </item>
    
    <item>
      <title>文字上添加删除线</title>
      <link>https://blog.v5u.win/post/ios-%E6%96%87%E5%AD%97%E4%B8%8A%E6%B7%BB%E5%8A%A0%E5%88%A0%E9%99%A4%E7%BA%BF/</link>
      <pubDate>Fri, 21 Aug 2015 17:10:49 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-%E6%96%87%E5%AD%97%E4%B8%8A%E6%B7%BB%E5%8A%A0%E5%88%A0%E9%99%A4%E7%BA%BF/</guid>
      <description>&amp;nbsp; &amp;nbsp;&amp;nbsp;NSString * str = @&amp;quot;ABCDEFG HIJKLMN&amp;quot;; &amp;nbsp; &amp;nbsp; UILabel * aLab = [[UILabel alloc]initWithFrame:CGRectMake(10, 100, 300, 300)]; &amp;nbsp; &amp;nbsp; aLab.text = str; &amp;nbsp; &amp;nbsp; NSMutableAttributedString * testAttriString = [[NSMutableAttributedString alloc] initWithString:str]; &amp;nbsp;&amp;nbsp; [testAttriString addAttribute:NSStrikethroughStyleAttributeName value:[NSNumber numberWithInt:NSUnderlineStyleSingle] range:NSMakeRange(0, testAttriString.length)]; &amp;nbsp; &amp;nbsp; aLab.attributedText = testAttriString; &amp;nbsp; &amp;nbsp; [self.view addSubview:aLab];</description>
    </item>
    
    <item>
      <title>App Store上架前的准备</title>
      <link>https://blog.v5u.win/post/ios-appstore_public_before/</link>
      <pubDate>Fri, 21 Aug 2015 17:10:11 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-appstore_public_before/</guid>
      <description>一、制作ipa发布包 1、所需装备 1）一个distribution发布版证书 2）Xcode，iTunes，完成的项目，这都不用说了 开始配置Xc</description>
    </item>
    
    <item>
      <title>主动退出iOS程序</title>
      <link>https://blog.v5u.win/post/ios-force-exit/</link>
      <pubDate>Mon, 10 Aug 2015 12:05:51 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-force-exit/</guid>
      <description>exit(0); 只有这个API可以通过AppStore。</description>
    </item>
    
    <item>
      <title>iOS7之后如何获得APP唯一的身份标识</title>
      <link>https://blog.v5u.win/post/ios-uuid/</link>
      <pubDate>Sun, 09 Aug 2015 11:24:34 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-uuid/</guid>
      <description>历史： 1) iOS 5.0以前，iOS 2.0版本以后UIDevice提供一个获取设备唯一标识符的方法uniqueIdentifier，因为该唯一标识符</description>
    </item>
    
    <item>
      <title>获取tableviewCell在当前屏幕中的坐标值</title>
      <link>https://blog.v5u.win/post/ios-tableviewcell-frame/</link>
      <pubDate>Fri, 07 Aug 2015 13:28:36 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-tableviewcell-frame/</guid>
      <description>获得当前cell对于当前屏幕的位置 CGRect&amp;nbsp;rectInTableView&amp;nbsp;=&amp;nbsp;[tableView&amp;nbsp;rectForRowAtIndexPath:indexPath]; &amp;nbsp;&amp;nbsp; CGRect&amp;nbsp;rect&amp;nbsp;=&amp;nbsp;[tableView&amp;nbsp;convertRect:rectInTableView&amp;nbsp;toView:[tableView&amp;nbsp;superview]];</description>
    </item>
    
    <item>
      <title>自定义back按钮无法使用系统pop interactive gesture 问题</title>
      <link>https://blog.v5u.win/post/ios-backbutton-pop-interactive-gesture/</link>
      <pubDate>Thu, 06 Aug 2015 18:50:01 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-backbutton-pop-interactive-gesture/</guid>
      <description>两种解决办法： 方法一： A，我的应用是自定义的返回按钮图标(默认返回按钮样式不会出现问题3)，为了保险，写了这句代码[self.navigat</description>
    </item>
    
    <item>
      <title>XCode上设备或证书不能自动建和修改的问题解决</title>
      <link>https://blog.v5u.win/post/xcode-profile-file/</link>
      <pubDate>Tue, 04 Aug 2015 20:59:44 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-profile-file/</guid>
      <description>自从XCode支持自动维护证书之后，省去了我们手动添加设备再更新完证书之后下载的麻烦，但一直都没有搞明白自动维护的机制，导致经常出现XCod</description>
    </item>
    
    <item>
      <title>如何使用Xcode--切换tap栏</title>
      <link>https://blog.v5u.win/post/xcode-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8xcode-%E5%88%87%E6%8D%A2tap%E6%A0%8F/</link>
      <pubDate>Thu, 16 Jul 2015 11:10:27 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8xcode-%E5%88%87%E6%8D%A2tap%E6%A0%8F/</guid>
      <description>切换tap栏快捷键：commend+Shift+[,] ，此方法通用于其他APP上的tap栏切换 以下为转载 转自http://m.blog.cs</description>
    </item>
    
    <item>
      <title>NSTimer</title>
      <link>https://blog.v5u.win/post/ios-nstimer/</link>
      <pubDate>Thu, 16 Jul 2015 11:03:51 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-nstimer/</guid>
      <description>转载自 NSTimer的使用方法 1、初始化 + (NSTimer *)timerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(id)userInfo repeats:(BOOL)yesOrNo; + (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(id)userInfo repeats:(BOOL)yesOrNo; 注：不用scheduled方式初始化的，需要手动addTimer:for</description>
    </item>
    
    <item>
      <title>iOS 开发error/debug</title>
      <link>https://blog.v5u.win/post/ios-errordebug/</link>
      <pubDate>Tue, 14 Jul 2015 21:36:20 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-errordebug/</guid>
      <description>error:property with ‘retain(strong)’ attribute must be of object type&amp;nbsp; cause: 没有包含相应地头文件，造成变量引用错误，指针指向未知</description>
    </item>
    
    <item>
      <title>iOS端App的icon和Launch Image规格实时更新</title>
      <link>https://blog.v5u.win/post/ios-launch-image/</link>
      <pubDate>Tue, 14 Jul 2015 17:45:49 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-launch-image/</guid>
      <description>启动影像 ：&amp;nbsp;iPhone&amp;nbsp;：320 x 480&amp;nbsp;640 x 960 640*1136&amp;nbsp;750*1334 1242*2208&amp;nbsp;&amp;nbsp;iPad&amp;nbsp;：768 x 1004&amp;nbsp;1536 x</description>
    </item>
    
    <item>
      <title>Xcode如何添加pch文件</title>
      <link>https://blog.v5u.win/post/xcode-pch/</link>
      <pubDate>Tue, 14 Jul 2015 11:31:06 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-pch/</guid>
      <description>Xcode6.0之后去掉了Precompile Prefix Header 文件，主要原因可能在于Prefix Header大大的增加了Build的时间。没有了Pref</description>
    </item>
    
    <item>
      <title>iOS如何判断应用是否开启摄像头权限</title>
      <link>https://blog.v5u.win/post/ios-camera-right/</link>
      <pubDate>Fri, 19 Jun 2015 11:25:28 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-camera-right/</guid>
      <description>NSString * mediaType = AVMediaTypeVideo; &amp;nbsp; &amp;nbsp; AVAuthorizationStatus&amp;nbsp; authorizationStatus = [AVCaptureDevice authorizationStatusForMediaType:mediaType]; &amp;nbsp; &amp;nbsp; if (authorizationStatus == AVAuthorizationStatusRestricted || authorizationStatus == AVAuthorizationStatusDenied) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; UIAlertController* alertC = [UIAlertControlleralertControllerWithTit</description>
    </item>
    
    <item>
      <title>iOS NSString 字符串处理：截取字符串、匹配字符串、分隔字符串</title>
      <link>https://blog.v5u.win/post/ios-string/</link>
      <pubDate>Thu, 04 Jun 2015 17:33:36 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-string/</guid>
      <description>1.截取字符串 NSString*string =@&amp;quot;sdfsfsfsAdfsdf&amp;quot;; string = [string&amp;nbsp;substringToIndex:7];//截取下标7之后的字符串 NSLog(@&amp;quot;</description>
    </item>
    
    <item>
      <title>使用Autolayout xib实现动态高度的TableViewCell</title>
      <link>https://blog.v5u.win/post/ios-autolayouttableviewcell/</link>
      <pubDate>Wed, 03 Jun 2015 15:27:18 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-autolayouttableviewcell/</guid>
      <description>文章来源于http://itony.me/381.html 创建Xib文件 首先将Cell做好布局，调整到满意的位置和宽度，然后开始做Autol</description>
    </item>
    
    <item>
      <title>如何避免在Block里用self造成循环引用</title>
      <link>https://blog.v5u.win/post/ios-%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%9C%A8block%E9%87%8C%E7%94%A8self%E9%80%A0%E6%88%90%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8/</link>
      <pubDate>Fri, 15 May 2015 16:00:00 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%9C%A8block%E9%87%8C%E7%94%A8self%E9%80%A0%E6%88%90%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8/</guid>
      <description>本文原引于Bannings的专栏博客 一般来说我们总会在设置Block之后，在合适的时间回调Block，而不希望回调Block的时候Block</description>
    </item>
    
    <item>
      <title>UISegmentedControl简单使用</title>
      <link>https://blog.v5u.win/post/ios-uisegmentedcontrol/</link>
      <pubDate>Thu, 14 May 2015 16:53:26 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-uisegmentedcontrol/</guid>
      <description>NSArray* segMArr = [NSArray arrayWithObjects:@&amp;quot;0&amp;quot;,@&amp;quot;1&amp;quot;, nil]; UISegmentedControl* segmentC = [[UISegmentedControlalloc]initWithItems:segMArr]; &amp;nbsp; &amp;nbsp; segmentC.frame = CGRectMake(0, 178, 320, 30); &amp;nbsp; &amp;nbsp; segmentC.segmentedControlStyle= UISegmentedControlStylePlain; &amp;nbsp; &amp;nbsp; segmentC.tintColor = [UIColor BlueColor]; &amp;nbsp; &amp;nbsp; segmentC.selectedSegmentIndex= 0; &amp;nbsp; &amp;nbsp; [segmentC addTarget:selfaction:@selector(segmentedControlSelected:) forControlEvents:UIControlEventValueChanged]; &amp;nbsp; &amp;nbsp; [bgView addSubview:segmentC]; (void)segmentedControlSelected:(UISegmentedControl*)seg{ &amp;nbsp; &amp;nbsp; if(seg.selectedSegmentIndex== 0) { &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }elseif(seg.selectedSegmentIndex== 1){ &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } }</description>
    </item>
    
    <item>
      <title>svn上传.a文件</title>
      <link>https://blog.v5u.win/post/system-svn-.a-upload/</link>
      <pubDate>Thu, 23 Apr 2015 09:46:53 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/system-svn-.a-upload/</guid>
      <description>在mac下很多svn管理工具默认都不能上传.a文件，这让人很苦恼。从网上扒了下，找到了两个方法。 方法一： 打开终端，cd 进入到需要上传的.a文</description>
    </item>
    
    <item>
      <title>iOS8.3发布了Swift 1.2带来哪些新变化</title>
      <link>https://blog.v5u.win/post/ios-ios8.3-swift-changed/</link>
      <pubDate>Tue, 14 Apr 2015 14:59:50 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-ios8.3-swift-changed/</guid>
      <description>原文&amp;nbsp;&amp;nbsp;http://www.cnblogs.com/yuyongjian/p/4371400.html 苹果前几日在面向</description>
    </item>
    
    <item>
      <title>App Store 上架流程</title>
      <link>https://blog.v5u.win/post/ios-app-store-public/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/ios-app-store-public/</guid>
      <description>App Store上架流程 申请开发者账号 登录开发者网站，注册cer APP ID， profile (xcode 只能解决测试证书配置) 登录iTunes connection网站，注册</description>
    </item>
    
  </channel>
</rss>