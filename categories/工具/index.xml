<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工具 on 为吾优</title>
    <link>https://blog.v5u.win/categories/%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 工具 on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 12 Jul 2018 02:38:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.v5u.win/categories/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>iterm比terminal好在哪里？</title>
      <link>https://blog.v5u.win/779.html</link>
      <pubDate>Thu, 12 Jul 2018 02:38:00 +0000</pubDate>
      
      <guid>https://blog.v5u.win/779.html</guid>
      <description>iterm比terminal好在哪里？ 为什么要用iterm  多窗口切换 command + T 同个窗口横向分屏 command + d 同个窗口，竖向分屏 command + shift + d 自动补齐命令 comm + ; 直接打开文件 按住command键并点击文件名 (ps: terminal用open命令也可以) 自动复制 直接双击需要复制的文字，即可自动复制 设置主题配色 在偏好设置里进行一些基本的颜色设置，在GitHub上下载做好的主题，导入。 (ps: 成品自由度高👍，合心意的需要手动配置-&amp;gt;terminal也可以手动配置)  这么好的东西我还是用terminal好了。</description>
    </item>
    
    <item>
      <title>mac虚拟机上的centos 7实现ssh连接</title>
      <link>https://blog.v5u.win/763.html</link>
      <pubDate>Sat, 30 Jun 2018 08:57:11 +0000</pubDate>
      
      <guid>https://blog.v5u.win/763.html</guid>
      <description>mac虚拟机上的centos7实现ssh连接
 查看是否安装ssh rpm -qa | grep ssh（一般都内置了）
 配置sshd_config文件 /etc/ssh/sshd_config
Port 22
ListenAddress 0.0.0.0
ListenAddress ::
 防火墙配置
 安装iptables: yum install iptables-service 配置防火墙文件：vim /etc/sysconfig/iptables 关闭防火墙：systemctl restart iptables.service systemctl enable iptables.service //设置防火墙开机启动   安装netstat：yum install net-tools （查看监听端口：netstat -ntpl | grep 22）
 关闭虚拟机，设置虚拟机网络为host-only方式，virtualbox需要设置全局设置
 cmd+,-&amp;gt;网络-&amp;gt;仅主机(host-only)网络 添加网络   查看虚拟机ip地址，ip ip addr
 主机找到可以ping 通的ip
 ssh登录 ssh root@192.168.xx.xx
  </description>
    </item>
    
    <item>
      <title>gitbook如何生成epub</title>
      <link>https://blog.v5u.win/736.html</link>
      <pubDate>Wed, 23 May 2018 15:44:43 +0000</pubDate>
      
      <guid>https://blog.v5u.win/736.html</guid>
      <description>全局安装gitbook ：npm install -g gitbook 下载calibre安装应用 将calibre中的执行文件ebook-convert链接到shall环境：$ sudo ln -s /Applications/calibre.app/Contents/MacOS/ebook-convert /usr/local/bin 验证ebook-convert可用，terminal下输入ebook-convert 后回车 如果可用，导出epub文件 gitbook epub ./ ./mbook.epub  node: gitbook项目需要先npm install,在生成epub</description>
    </item>
    
    <item>
      <title>ternimal</title>
      <link>https://blog.v5u.win/734.html</link>
      <pubDate>Fri, 18 May 2018 08:53:16 +0000</pubDate>
      
      <guid>https://blog.v5u.win/734.html</guid>
      <description>暴力删除文件：输入 sudo rm -rf .Trash 再输入密码后 Enter 。 mac 设置软件安装安全级别 sudo spctl &amp;ndash;master-disable 文件权限修改
 文字设定法 chmod [who] [+ | - | =] [mode] 文件名?
 mkdir code
修改权限的命令格式 chmod [&amp;lt;权限范围&amp;gt;&amp;lt;权限操作&amp;gt;&amp;lt;具体权限&amp;gt;] [文件或目录…] &amp;lt;权限范围&amp;gt; u：User，即文件或目录的拥有者。 g：Group，即文件或目录的所属群组。 o：Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围。 a：All，即全部的用户，包含拥有者，所属群组以及其他用户。 &amp;lt;权限操作&amp;gt; +：表示增加权限 - ：表示取消权限 =：表示唯一设定权限 &amp;lt;具体权限&amp;gt; r：表示可读取 w：表示可写入 x ：表示可执行 例：chmod o+w 111.txt   打开当前文件夹 open . 打开当前文件用指定的软件 open -a Sublime\ Text Podfile (open -a app_name file_name)</description>
    </item>
    
    <item>
      <title>brew gem npm cocoapods</title>
      <link>https://blog.v5u.win/post/mac-brew-gem-npm-cocoapods/</link>
      <pubDate>Fri, 20 Apr 2018 05:00:32 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-brew-gem-npm-cocoapods/</guid>
      <description>Mac上的包管理器 常用的有：brew gem npm cocoapods pip3 * brew 用来管理Unix相关工具软件，就像centos之于yum，Ubuntu之于apt-get * gem 即RubyGems,管理ruby社区的软件包。 * npm 是nodejs的包管理器，用来管理nodejs社区的软件包。 * pip 是Python的包管理器，用来管理Python社区的软件包 * cocoapods 是iOS开发的包管理器，用来管理iOS代码包</description>
    </item>
    
    <item>
      <title>appledoc使用说明</title>
      <link>https://blog.v5u.win/673.html</link>
      <pubDate>Wed, 04 Apr 2018 07:00:34 +0000</pubDate>
      
      <guid>https://blog.v5u.win/673.html</guid>
      <description>appledoc使用说明 安装命令行：
 git clone git://github.com/tomaz/appledoc.git cd ./appledoc sudo sh install-appledoc.sh appledoc —version //检查successed  使用 生成HTML 当需要html文档时，可以加上“&amp;ndash;no-create-docset”——
appledoc --no-create-docset --output ~/doc --project-name &amp;quot;DrowRect&amp;quot; --company-id &amp;quot;com.jinyuyoulong&amp;quot; --project-company &amp;quot;jinyuyoulong&amp;quot; ./  注: &amp;ndash;output ./doc：设置输出目录为“./doc”。 &amp;ndash;project-name objcdoc：设置项目名为“DrowRect”。 &amp;ndash;project-company &amp;ldquo;jinyuyoulong&amp;rdquo;：设置公司名为“jinyuyoulong”。 &amp;ndash;company-id &amp;ldquo;com.jinyuyoulong&amp;rdquo;：设置公司id为“com.jinyuyoulong”。 ./：当前目录。 生成docset 此路不通
appledoc --output ./doc --project-name &amp;quot;DrowRect&amp;quot; --project-company &amp;quot;jinyuyoulong&amp;quot; --company-id &amp;quot;com.jinyuyoulong&amp;quot; ./  Xcode脚本生成文档 Xcode 配置
 add new target —&amp;gt;选择Other—Aggregate，命名为docText
 Build Phases + run script
 编辑run script的内容</description>
    </item>
    
    <item>
      <title>pycharm如何添加 local venv</title>
      <link>https://blog.v5u.win/666.html</link>
      <pubDate>Fri, 30 Mar 2018 03:20:02 +0000</pubDate>
      
      <guid>https://blog.v5u.win/666.html</guid>
      <description>需求：pycharm为项目添加已经存在的venv虚拟环境 前几天学习Django，开始是terminal + sublime text。后来学的差不多了，想想做项目还是得上pycharm，所以开始折腾。 说明，pycharm create project是会询问是否创建新的venv的，换句话说，其实pycharm是建议设置基础引用Python版本，然后在他的基础上，每个项目都有自己的venv。这种策略很好，每个项目的环境互不干扰。奈何范子处于学习阶段，local项目已经有了本地的venv，不需要重新创建。这时候我就需要考虑如何添加一个local venv。 然而道路颇多波折，localvenv的path是确切知道的，但是在pycharm的configurations中Python interperter是一个选择栏，而没有添加栏。这就尴尬了！ 万幸经过摸索，在设置中（Mac版 cmd+,）发现是可以添加的 在这里添加好了之后，在返回configurations，出现了新的选项，选择就可以了。</description>
    </item>
    
    <item>
      <title>mac文件权限修改</title>
      <link>https://blog.v5u.win/post/mac-file-right-change/</link>
      <pubDate>Mon, 13 Mar 2017 17:20:42 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-file-right-change/</guid>
      <description>文件或目录的访问权限分为只读，只写和可执行三种。 文件被创建时，文件所有者自动拥有对该文件的读、写和可执行权限，以便于对文件的阅读和修改。 有三种不同类型的用户可对文件或目录进行访问：文件所有者，同组用户、其他用户。
用ls -l命令显示文件或目录的详细信息，最左边的一列为文件的访问权限
例:
$ ls -l script.swift
-rw-r--r-- 1 fans staff 39 3 13 16:16 script.swift
横线代表空许可。r代表只读，w代表写，x代表可执行
这里共有10个位置。第一个字符指定了文件类型。 在通常意义上，一个目录也是一个文件。如果第一个字符是横线，表示是一个非目录的文件。如果是d，表示是一个目录。
   - rw- r-- r--     普通文件 文件主 组用户 其他用户    是文件script.swift 的访问权限，表示script.swift是一个普通文件； script.swift的属主有读写权限；与script.swift属主同组的用户只有读权限；其他用户也只有读权限。
chmod 命令 功能：用于改变文件或目录的访问权限.用户用它控制文件或目录的访问权限. 语法：该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。
 文字设定法
chmod u+x script.swift
[详情点一下][http://blog.csdn.net/nitghost/article/details/4224034]
 数字设定法
略。。。知道那么多干嘛，一种还不够你用的！^_^
  swift研究学习</description>
    </item>
    
    <item>
      <title>brew 安装</title>
      <link>https://blog.v5u.win/post/mac-brew-install/</link>
      <pubDate>Sat, 25 Feb 2017 22:54:49 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-brew-install/</guid>
      <description>Mac自带ruby 安装brew ruby -e &amp;quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&amp;quot; 已经安装了可以输入这个命令 ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot; 如何使用brew 举个栗子: wget 这个工具 输入命令: brew install wget 输入命令 brew uninstall wget</description>
    </item>
    
    <item>
      <title>使用sublime text 3 进行Python3开发</title>
      <link>https://blog.v5u.win/post/sublime-python3/</link>
      <pubDate>Mon, 23 Jan 2017 15:22:20 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/sublime-python3/</guid>
      <description>痛点1：每次编写完Python文件后都要切到terminal下输入python fileName.py命令执行文件。 解决：mac版sublime text编辑器使用shift+command+b选择Python 直接执行文件
痛点2：sublime默认执行的Python版本是系统默认的，不能直接使用Python3来执行Python文件 解决：Tools&amp;ndash;&amp;gt;Build System&amp;ndash;&amp;gt;New Build System 写入：
{ &amp;quot;shell_cmd&amp;quot;: &amp;quot;/usr/bin/env python3 ${file}&amp;quot;, &amp;quot;selector&amp;quot;: &amp;quot;source.python&amp;quot;, &amp;quot;file_regex&amp;quot;: &amp;quot;^(...*?):([0-9]*):?([0-9]*)&amp;quot;, &amp;quot;working_dir&amp;quot;: &amp;quot;${file_path}&amp;quot;, }  ​ 保存为/Packages/User/python3.sublime-build ​ 然后选择环境为python3即可</description>
    </item>
    
    <item>
      <title>mac 如何使用wget</title>
      <link>https://blog.v5u.win/post/mac-wget/</link>
      <pubDate>Sat, 21 Jan 2017 23:38:52 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-wget/</guid>
      <description>下载单个文件， 为什么不用mac原生自带的工具：curl &amp;ldquo;网址链接&amp;rdquo; -o &amp;ldquo;输出文件名&amp;rdquo; 解释一下，wget是Linux下自带的文件下载工具非常好用，mac下还是推荐使用原生。 呵呵哒，也许我是一片假的教程文章。</description>
    </item>
    
    <item>
      <title>抓包调试工具mitmproxy</title>
      <link>https://blog.v5u.win/post/system-%E6%8A%93%E5%8C%85%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7mitmproxy/</link>
      <pubDate>Tue, 27 Dec 2016 10:39:15 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/system-%E6%8A%93%E5%8C%85%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7mitmproxy/</guid>
      <description>安装：brew install mitmproxy 其他安装方式: http://docs.mitmproxy.org/en/latest/install.html
启动：mitmproxy -p 8080(监听端口号)
设置代理，具体设置方法请自行查找
抓取https：用 iPhone 打开 Safari 浏览器并输入 mitm.it，安装信任证书
使用：键盘上下移动，Enter 键进入查看详情，按 Tab 键切换顶部导航栏
拦截修改 request 和 response： 输入 i，然后输入 ~s 再按回车键，这时候就进入了 response 拦截模式。如果输入 ~q 则进入 request 的拦截模式，更多的命令可以输入 ？ 查看。 其中橘红色的表示请求正被拦截，这时 Enter 进入后 再按 e 就可以修改 request 或者 response。修改时是用 vim 进行编辑的，修改完成后按 a 将请求放行，如果要放行所有请求输入 A 即可</description>
    </item>
    
    <item>
      <title>使用Xcode8创建Python项目</title>
      <link>https://blog.v5u.win/post/xcode-xcode8python/</link>
      <pubDate>Tue, 06 Dec 2016 10:44:31 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-xcode8python/</guid>
      <description> 今天想使用一个IDE来开发Python，省的每次写完后都要在terminal上敲命令。选来选去，既然已经安装了Xcode就先用他吧。
那么怎么才能使用Xcode创建并运行Python文件呢？ 必要准备：mac &amp;amp; Xcode 开发环境整理： 1.1 创建 1.2 选择mac跨平台应用 1.3 添加项目名称 2.1 添加文件 2.2 Other &amp;gt; Empty Empty&amp;rdquo; /&amp;gt;
2.3 给文件命名 3.1 Product &amp;gt; Scheme &amp;gt; Edit Scheme 3.2 Run &amp;gt; info &amp;gt; Executable &amp;gt; Other 3.3 Command+Shift+G 定位文件路径Go to the folder:填写/usr/bin/python 3.4 确认选中的可执行文件 3.5 确认Executable 选中python Debug executable 不用选中 3.6 Arguments &amp;gt; + &amp;gt;新建的文件名 3.7 Options &amp;gt; Working Directory &amp;gt;项目路径 选择文件 3.8 确认设置 4 运行 print &amp;quot;hello world&amp;quot; </description>
    </item>
    
    <item>
      <title>Xcode8添加iOS7真机调试</title>
      <link>https://blog.v5u.win/post/xcode-xcode8-ios7-device/</link>
      <pubDate>Mon, 19 Sep 2016 11:58:47 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/xcode-xcode8-ios7-device/</guid>
      <description>打开Xcode8和Xcode7的app包内容 Contants/Developer/Platforms/iPhoneOS.platform/DeviceSupport 将Xcode7的iOS7的框架copy到Xcode8内</description>
    </item>
    
    <item>
      <title>Sublime Text3 使用心得</title>
      <link>https://blog.v5u.win/post/sublime-nodejs/</link>
      <pubDate>Fri, 09 Sep 2016 14:45:12 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/sublime-nodejs/</guid>
      <description>build nodejs项目 sublime text 3自带build的系统，只需要在tools-&amp;gt;build system-&amp;gt; new build system&amp;hellip;
{ &amp;quot;shell_cmd&amp;quot;: &amp;quot;node $file&amp;quot;, &amp;quot;selector&amp;quot;: &amp;quot;source.js&amp;quot; }   保存为 node.sublime-build，就可以使用cmd+shift+b调出窗口选择node编译.
在keymap绑定按键：
{ &amp;quot;keys&amp;quot;: [&amp;quot;ctrl+c&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;exec&amp;quot;, &amp;quot;args&amp;quot;: { &amp;quot;kill&amp;quot;: true } }  就可以使用快捷键ctrl+c关闭，或者手动点选tools-&amp;gt; cancel build中断。
需要编译es6的代码的话可以考虑用babel，build tools替换成
{ &amp;quot;shell_cmd&amp;quot;: &amp;quot;babel-node $file&amp;quot;, &amp;quot;selector&amp;quot;: &amp;quot;source.js&amp;quot; }  插件安装 shift+commend+p 输入install敲return/Enter，查找插件
我安装的插件： * Babel ES2015语法转化器 * EJS WEB所使用的模板引擎之一 * emmet 提高HTML &amp;amp;amp; CSS3编写速度 * ConvertToUTF8 UTF8转换 *
插件使用教程： emmet : http://www.</description>
    </item>
    
  </channel>
</rss>