<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>other technology其他技术 on 为吾优</title>
    <link>https://jinyuyoulong.github.io/categories/other-technology%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in other technology其他技术 on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 19 Jan 2018 09:37:16 +0000</lastBuildDate>
    
	<atom:link href="https://jinyuyoulong.github.io/categories/other-technology%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关键字探索 define const</title>
      <link>https://jinyuyoulong.github.io/post/itblack-defineconst/</link>
      <pubDate>Fri, 19 Jan 2018 09:37:16 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/itblack-defineconst/</guid>
      <description> define 单纯的代码替换，预编译时进行 const 常数，不变的。 ​ const是一个关键字。它限定一个变量不允许被改变，产生静态作用。
 编译时进行处理
 只分配一次内存
 修饰关键字右边部分表示的内容不可变
// stringConst 地址能修改，stringConst值不能修改 NSString * const stringConst = @&amp;ldquo;I am a NSString * const string&amp;rdquo;;
  static 局部变量（只在文件内使用）  延长被修饰变量的生命周期，程序结束才被销毁 只生成一份内存，只做一次初始化 修改变量作用域，限制在本文件内  </description>
    </item>
    
    <item>
      <title>MySQL 数据库迁移</title>
      <link>https://jinyuyoulong.github.io/post/system-mysql-change/</link>
      <pubDate>Thu, 15 Dec 2016 14:21:18 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/system-mysql-change/</guid>
      <description> mac 下迁移数据库的结构和内容 迁移准备：数据库文件（可用工具导出Mysql文件）
注意：由于文件权限的问题 可能不能进入Mysql的data文件内  进入文件 /usr/local/mysql/data 如果打不开，修改文件访问权限，（右击，显示简介，修改文件读写权限） 将相应的文件(如：MYD,MYI,frm) copy进合适的数据库内（文件夹） 打开数据库，查看迁移情况  </description>
    </item>
    
    <item>
      <title>OpenShift的使用</title>
      <link>https://jinyuyoulong.github.io/post/system-openshift/</link>
      <pubDate>Wed, 14 Dec 2016 17:56:33 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/system-openshift/</guid>
      <description> 注册完成后如何使用命令行连接服务器
登录OpenShift网站，进入app的详情页，找到隐藏的ssh连接，不是下载地址的ssh连接，拷贝后直接在终端打开就行，无需密码
  </description>
    </item>
    
    <item>
      <title>命名规范</title>
      <link>https://jinyuyoulong.github.io/post/system-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</link>
      <pubDate>Tue, 08 Nov 2016 14:39:03 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/system-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</guid>
      <description>http://yemengying.com/2016/06/25/cleanCode4naming/</description>
    </item>
    
    <item>
      <title>数据结构</title>
      <link>https://jinyuyoulong.github.io/post/system-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Mon, 07 Nov 2016 22:13:26 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/system-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description> 顺序表 链表 栈和队列 散列表 树结构
适合表述层次关系
 图结构
  </description>
    </item>
    
    <item>
      <title>Sublime Texts使用tips</title>
      <link>https://jinyuyoulong.github.io/post/sublime-tips/</link>
      <pubDate>Sun, 04 Sep 2016 00:07:07 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/sublime-tips/</guid>
      <description> 多行编辑：control + 点击各行编辑位置 全局修改所有单词：双击单词，comment+control+G 选中一个单词：Command + D 选中一个单词及下一个同样的单词 包管理工具：control package ,快捷键：shift+commend+P  </description>
    </item>
    
    <item>
      <title>mac下MongoDB</title>
      <link>https://jinyuyoulong.github.io/post/mac-bmongodb/</link>
      <pubDate>Mon, 18 Jul 2016 18:16:11 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/mac-bmongodb/</guid>
      <description>1. 安装 1.1 解压缩mongo文件，将解压缩后的文件移动到自己喜欢的目录下 1.2 由于没有配置环境变量，先测试使用。 终端进入mongodb的安装路径，在bin路径下，执行./mongod启动数据库
有可能报错 exception in initAndListen: 29 Data directory /data/db not found 这是因为/data/db 目录不存在，若启动时，不指定任何参数， MongoDB 会默认使用 /data/db 目录存储数据， 我们可以使用 &amp;ndash;dbpath 来指定其它的路径，比如我使用的是下面这样的命令启动的： ./mongod --dbpath ../data/db 新开一个终端，在bin路径下执行./mongo启动mongodb管理
2. 使用 show dbs 显示 数据库s use dbName 切换数据库 show collections 数据库下的显示表 db.表明.find() 显示表中数据</description>
    </item>
    
    <item>
      <title>mac下wireshark的使用方法</title>
      <link>https://jinyuyoulong.github.io/post/mac-wireshark/</link>
      <pubDate>Wed, 18 May 2016 18:47:09 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/mac-wireshark/</guid>
      <description>Wireshark是mac下一款非常好的抓包工具，安装我就不说了，下面我重点来说说如何使用。 1.打开终端 2.rvictl -s  // 创建一个虚拟接口 3.打开Wireshark，点击设置按钮，选择rvi0接口 4.开始调试
通过 RVI 抓取 iPhone 数据包 （1）RVI 简介 使用 Mac 抓取 iPhone 数据包可通过共享和代理两种方式： 使用 Mac 的网络共享功能将 Mac 的网络通过 WiFi 共享给 iPhone 连接； 使用代理软件（例如 Charles）在Mac上建立HTTP代理服务器。 这两种方式都是将 iPhone 的网络流量导入到 Mac 电脑中，通过 Mac 连接互联网。这就要求 Mac 本身是联网的，对于网络共享的方式还要求 Mac 本身的网络不能使用 WiFi，而且在 iPhone 上只能使用 WiFi 连接，无法抓取到 xG（2G/3G/4G） 网络包。 苹果在 iOS 5 中新引入了“远程虚拟接口（Remote Virtual Interface,RVI）”的特性，可以在 Mac 中建立一个虚拟网络接口来作为 iOS 设备的网络栈，这样所有经过 iOS 设备的流量都会经过此虚拟接口。此虚拟接口只是监听 iOS 设备本身的协议栈（但并没有将网络流量中转到 Mac 本身的网络连接上），所有网络连接都是 iOS 设备本身的，与 Mac 电脑本身联不联网或者联网类型无关。iOS设备本身可以为任意网络类型（WiFi/xG），这样在 Mac 电脑上使用任意抓包工具（tcpdump、Wireshark、CPA）抓取 RVI 接口上的数据包就实现了对 iPhone 的抓包。</description>
    </item>
    
    <item>
      <title>vim使用记录</title>
      <link>https://jinyuyoulong.github.io/post/system-vim/</link>
      <pubDate>Mon, 18 Apr 2016 17:26:21 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/system-vim/</guid>
      <description>剪切复制粘贴 命令模式下（esc）剪切一行：dd ;三行：3dd y复制 d()剪切 p(paste)粘贴</description>
    </item>
    
    <item>
      <title>八大算法思想</title>
      <link>https://jinyuyoulong.github.io/post/system-%E5%85%AB%E5%A4%A7%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3/</link>
      <pubDate>Wed, 23 Mar 2016 10:31:32 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/system-%E5%85%AB%E5%A4%A7%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3/</guid>
      <description> 枚举 递推 递归 分治 贪心 试探 动态迭代 模拟  </description>
    </item>
    
    <item>
      <title>计算中国农历</title>
      <link>https://jinyuyoulong.github.io/post/system-%E8%AE%A1%E7%AE%97%E5%86%9C%E5%8E%86/</link>
      <pubDate>Sun, 13 Dec 2015 15:14:46 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/system-%E8%AE%A1%E7%AE%97%E5%86%9C%E5%8E%86/</guid>
      <description>文章请查看：http://blog.csdn.net/orbit/article/details/9210413</description>
    </item>
    
    <item>
      <title>大神F1刷机失败怎么办？</title>
      <link>https://jinyuyoulong.github.io/post/life-%E5%A4%A7%E7%A5%9Ef1%E5%88%B7%E6%9C%BA%E5%A4%B1%E8%B4%A5%E6%80%8E%E4%B9%88%E5%8A%9E/</link>
      <pubDate>Sun, 29 Nov 2015 11:06:23 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/life-%E5%A4%A7%E7%A5%9Ef1%E5%88%B7%E6%9C%BA%E5%A4%B1%E8%B4%A5%E6%80%8E%E4%B9%88%E5%8A%9E/</guid>
      <description>刷机失败，需要进入Recovery模式才可以再次刷机
那么如何如何进入Recovery模式呢？
大神手机：
关机，同时按住音量+键和电源键
进入Recovery模式，
此时界面显示命令行，音量键上下选择，需要使用的模式，（此时可以连接刷机软件，如刷机精灵等）
此时可以再次刷入其他rom包</description>
    </item>
    
    <item>
      <title>HTML&amp;CSS</title>
      <link>https://jinyuyoulong.github.io/post/web-html-css/</link>
      <pubDate>Sun, 25 Oct 2015 17:48:49 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/web-html-css/</guid>
      <description>&amp;lt;p&amp;gt; paragragh 段落
&amp;lt;em&amp;gt; emphasize 强调(显示为斜体)
&amp;lt;span&amp;gt; 样式
&amp;lt;q&amp;gt; quote [kwot] 引用，引号(显示默认添加双引号，故不用再次添加“ ”)
&amp;lt;blockquote&amp;gt; 引用块 ，长文本引用(显示默认为缩进，左右都缩进)
&amp;lt;br /&amp;gt; break 换行 &amp;amp;nbsp; 空格占位符
&amp;lt;hr /&amp;gt; horizontal rule 水平分割线
&amp;lt;address&amp;gt; 地址标签(默认显示为斜体)
&amp;lt;code&amp;gt; 一行代码
&amp;lt;pre&amp;gt; predefined 预定义，多行代码,预格式化的文本。被包围在 pre 元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体.
&amp;lt;ul&amp;gt; unordered list 定义无序列表 (前方显示一个小圆点)
&amp;lt;li&amp;gt; list 列表
&amp;lt;ol&amp;gt; orderly list 定义有序列表 (前方显示123等数字)
创建表格的四个元素：table、tbody、tr、th、td
&amp;lt;tbody&amp;gt; table body 表格体
&amp;lt;tr&amp;gt; table row 表格，行
&amp;lt;td&amp;gt; table data 表格数据
&amp;lt;th&amp;gt; table head 表格头
&amp;lt;caption&amp;gt; 表格标题
&amp;lt;table summary=&amp;quot;表格简介文本&amp;quot;&amp;gt;</description>
    </item>
    
    <item>
      <title>.gitignore文件使用说明</title>
      <link>https://jinyuyoulong.github.io/post/system-git-gitignore/</link>
      <pubDate>Fri, 09 Oct 2015 13:25:58 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/system-git-gitignore/</guid>
      <description>一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。通常都是些自动生成的文件，像是日志或者编译过程中创建的等等。我们可以创建一个名为&amp;nbsp;.gitignore&amp;nbsp;的文件，列出要忽略的文件模式，来看一个简单的例子： $&amp;nbsp;cat&amp;nbsp;.gitignore&amp;nbsp;.[oa]&amp;nbsp;~
第一行告诉 Git 忽略所有以 .o 或 .a 结尾的文件。一般这类对象文件和存档文件都是编译过程中出现的，我们用不着跟踪它们的版本。第二行告诉 Git 忽略所有以波浪符（~）结尾的文件，许多文本编辑软件（比如 Emacs）都用这样的文件名保存副本。此外，你可能还需要忽略 log，tmp 或者 pid 目录，以及自动生成的文档等等。要养成一开始就设置好&amp;nbsp;.gitignore&amp;nbsp;文件的习惯，以免将来误提交这类无用的文件。
文件&amp;nbsp;.gitignore&amp;nbsp;的格式规范如下：
 所有空行或者以注释符号 ＃ 开头的行都会被 Git 忽略。
 可以使用标准的 glob 模式匹配。
 匹配模式最后跟反斜杠（/）说明要忽略的是目录。
 要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。
  所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。星号（*）匹配零个或多个任意字符；[abc] 匹配任何一个列在方括号中的字符（这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）；问号（?）只匹配一个任意字符；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如 [0-9] 表示匹配所有 0 到 9 的数字）。
我们再看一个&amp;nbsp;.gitignore&amp;nbsp;文件的例子： #&amp;nbsp;此为注释&amp;nbsp;–&amp;nbsp;将被&amp;nbsp;Git&amp;nbsp;忽略&amp;nbsp; .a&amp;nbsp;#&amp;nbsp;忽略所有&amp;nbsp;.a&amp;nbsp;结尾的文件&amp;nbsp; !lib.a&amp;nbsp;#&amp;nbsp;但&amp;nbsp;lib.a&amp;nbsp;除外&amp;nbsp; /TODO&amp;nbsp;#&amp;nbsp;仅仅忽略项目根目录下的&amp;nbsp;TODO&amp;nbsp;文件，不包括&amp;nbsp;subdir/TODO&amp;nbsp; build/&amp;nbsp;#&amp;nbsp;忽略&amp;nbsp;build/&amp;nbsp;目录下的所有文件&amp;nbsp; doc/.txt&amp;nbsp;#&amp;nbsp;会忽略&amp;nbsp;doc/notes.txt&amp;nbsp;但不包括&amp;nbsp;doc/server/arch.txt</description>
    </item>
    
    <item>
      <title>用 Xcode 编写 C/C&#43;&#43; 的 Hello World！</title>
      <link>https://jinyuyoulong.github.io/post/xcode-cc&#43;&#43;/</link>
      <pubDate>Fri, 25 Sep 2015 12:24:51 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/xcode-cc&#43;&#43;/</guid>
      <description>操作步骤：
 打开Xcode，在欢迎界面点击Create a new Xcode project。
 在左侧栏选择Mac OS X分类的Application，右侧选择Command Line Tool(命令行程序)，点击Next。
 在Product Name填写项目名称，如HelloMac，其余默认即可（type里也可以选择C或C++），点击Next后选择路径并点击Create完成项目创建。
 在Xcode主界面左侧点击main.m，把代码替换成C/C++的代码，点击左上角的Run按钮即可编译运行，界面下方会弹出控制台显示运行结果。
  </description>
    </item>
    
    <item>
      <title>MAC系统XAMPP 中 MySQL命令行客户端配置使用</title>
      <link>https://jinyuyoulong.github.io/post/mac-xampp/</link>
      <pubDate>Fri, 07 Aug 2015 23:42:00 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/mac-xampp/</guid>
      <description>MySQL客户端
&amp;nbsp; &amp;nbsp; &amp;nbsp;MySQL安装包里面，在一个名为bin的文件夹，放置了很多工具包，但是使用他们的方式是命令行（ps：最近上瘾了）。
&amp;nbsp; &amp;nbsp; &amp;nbsp; 在MAC系统，使用命令行的工具可以使用系统自带的Terminal:
&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &amp;nbsp; 顺便在这提一下，笔者使用的php＋mysql环境是MAC版的XAMPP，MySQL的客户端工具就放置在XAMPP里面的bin文件夹。
&amp;nbsp; &amp;nbsp; &amp;nbsp; 但是如何才能使用这客户端？
&amp;nbsp; &amp;nbsp; &amp;nbsp; 在Terminal进入到XAMPP的bin文件夹，输入命令： mysql&amp;nbsp;-u&amp;nbsp;root&amp;nbsp;-p&amp;nbsp;&amp;nbsp;  &amp;nbsp; &amp;nbsp; &amp;nbsp; 并没有笔者想要的结果，应该是提示输入密码的呀？？？？？？
&amp;nbsp; &amp;nbsp; &amp;nbsp; 在Terminal反馈给我的确是 : command not found
what ? 明明就在面前，如何not found，这下苦逼了！好吧，看来需要花点时间找找问题所在了。
经过很长很长很长&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;的时间里，终于&amp;hellip;.
原来当你输入命令的时间，系统会在/usr/bin这个位置里寻找你输入的命令，如果你没有把命令引入到这个位置，无论你直接cd到工具具体的位置调用，也是白费
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 功夫的。只要把这个工具的绝对位置引入到/usr/bin，所有的问题就迎刃而解了，只要我们把这条命令执行：
 ln&amp;nbsp;-s&amp;nbsp;/applications/xampp/bin/mysql&amp;nbsp;/usr/bin&amp;nbsp;&amp;nbsp;  
这个时候，我们再输入链接数据库命令，然后：
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;</description>
    </item>
    
    <item>
      <title>text/html &amp; text/plain的区别</title>
      <link>https://jinyuyoulong.github.io/post/web-texthtml-vs-textplain/</link>
      <pubDate>Fri, 24 Jul 2015 16:55:05 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/web-texthtml-vs-textplain/</guid>
      <description>需要了解的概念 　Content-Type：用于定义用户的浏览器或相关设备如何显示将要加载的数据，或者如何处理将要加载的数据
　MIME：MIME类型就是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。
&amp;nbsp;
text/html的意思是将文件的content-type设置为text/html的形式，浏览器在获取到这种文件时会自动调用html的解析器对文件进行相应的处理。
text/plain的意思是将文件设置为纯文本的形式，浏览器在获取到这种文件时并不会对其进行处理。</description>
    </item>
    
    <item>
      <title>SEOer的优化思路</title>
      <link>https://jinyuyoulong.github.io/post/system-seo/</link>
      <pubDate>Sun, 26 Apr 2015 17:56:07 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/system-seo/</guid>
      <description>&amp;nbsp;
SEO是一门复杂的学问，手法很多，提高权重可以从很多角度着手，但是，什么样的网站需要用到什么样的手法，网站的不同阶段，又需要怎么样提高排名？这就是SEO排名思路了。
网站上线一段时间，有了很多关键词的排名，每天的流量也有一些，但是怎么也提高不上去，怎么办呢？
我们如果注意观察会发现，百度最近的算法又调整了，很多的大站的排名也出现了波动，最简单的，站长们比较关心的seo这个词的前三页排名可以说大调整。北京seo鱼非子，最近通过观察很多seo的老站，大站的排名出现了较大的波动，甚至焦大的博客都被黑掉了，这是怎么搞的呢？seo到底要怎么搞呢？
百度算法最近已经调整，这个是毋庸置疑的，如果你比较关注百度官方的话，百度官方最近更新了一些文章，暗示百度的算法的调整方向，下面我就说一下我的感悟。
无疑，参与内页的排名的页面越来越多，内容能不能解决用户的问题，以前研究过google的都晓得，如果百度它是指当一个用户进行搜索时点击了一个结果然后立即点击浏览器的后退按钮，然后点击了另一个站点的结果并在那里停留。这对于搜索引擎来说是一个信号——你没有提供用户想找的内容或者提供了一个差劲的体验。这种情况如果多次发生会让你在搜索引擎的排名迅速下降。
很多站长，或者行业外的人，招人做优化，一般都是给出关键词，给出网站。我想说的是，拍上去，并不难，难的是，稳定住，我们不研究任何的算法，试着想一下。如果你运用了一些手段，让自己百度排名上升了，但是如果你的网页是不安全的，或者不能够解决客户问题的，也就是不能够留住客户的，跳出率必然会很高，长久的下去，百度会检测到你的跳出率的，你的网站不能够帮助到使用百度搜索引擎的人，那百度怎么会给你一个高分呢？
之前，我在文章（什么样的原创才是SEO）里提高过怎么量化评价一个网站的高低，当百度认为你是一个高质量的网页的时候，百度会给你一个还算不错的排名，这时候就需要内容的优化了，也就是seo的根源，客户体验，这个时候才是需要客户体验，才需要做内容优化，写好的内容，做好的图片。
于此同时，我们要做的是配合好权重的导入工作，利用上自己的各种资源，因为一旦你网站百度认识了，认可了，这时候，你把跳出率降下来，让更多的网页给你加分（导入链接）这样权重提高是非常快的。
于此同时在布局文章内容的时候，一定要做好长尾词的建设，我们都知道长尾词虽然没有指数，但是排名是很容易的，尤其当你网站有了一定的权重之后，长尾词的排名是非常容易的，这时候要做的就是多多布局长尾词，让你的网站有更多入口，无论搜索人群输入什么样的长尾关键词都可以看到你的页面，内容还不错的话，就是良性的循环了。
所以SEOer在做网站排名的时候，一定要有一套完整的SEOer优化思路，不要今天听大神讲外链有用就去疯狂发外链，明天听另一个大神说原创内容好，又去大量的伪原创，我们SEOer不仅仅要学习，更重要的是要有独立思考的能力，只有这样，慢慢我们自己才能靠近大神。
北京SEO官网 www.aiyw.net‍</description>
    </item>
    
  </channel>
</rss>