<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>阅读 on 为吾优</title>
    <link>https://jinyuyoulong.github.io/categories/%E9%98%85%E8%AF%BB/</link>
    <description>Recent content in 阅读 on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 10 Oct 2018 09:40:11 +0000</lastBuildDate>
    
	<atom:link href="https://jinyuyoulong.github.io/categories/%E9%98%85%E8%AF%BB/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>《程序员的咆哮》阅读总结</title>
      <link>https://jinyuyoulong.github.io/post/read-%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%92%86%E5%93%AE%E9%98%85%E8%AF%BB%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 10 Oct 2018 09:40:11 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/read-%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%92%86%E5%93%AE%E9%98%85%E8%AF%BB%E6%80%BB%E7%BB%93/</guid>
      <description> 编程界的数学
学校的数学教育体系是错误的，因为这是数学领域的连续知识，但是在现实生活中很多没有实际用处。
学校不教，现实中很有用的数学：统计，代数——线性代数，数理逻辑，信息论和柯氏复杂性
运用数学的第一步是：界定问题。当一个问题在手却不知道如何下手的时候，是最花时间的。
编译原理是计算机科学第二重要的科学，很重要，因为他非常切实的将你学到的几乎所有东西都捏合在了一起。 编译原理3个领域： 1. 解析，词法分析，语法分析生成解析树
 类型检查 代码生成的正确性  Google的面试
 细的马克笔 大O复杂度分析 知道排序是怎么回事，两个nlog(n)的排序算法，比如快排和归并排序 哈希表是人类已知的最重要的数据结构，一定要弄明白原理。 树，必须弄懂 图，内存中表示图的方法有3中(指针和对象，矩阵，邻接表) 每次遇到问题首先考虑的是图算法。他们是任何关系里最基本，最灵活的方法。 基本的离散数学 操作系统：线程，进程，并发这些概念，掌握锁的概念， 编程，对一门语言的细节有相当的了解  </description>
    </item>
    
  </channel>
</rss>