<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on 为吾优</title>
    <link>https://blog.v5u.win/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 07 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.v5u.win/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数据库选型</title>
      <link>https://blog.v5u.win/post/system-%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/system-%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>作者：大宽宽
在整个行业发展过程中，一些需求催生了各种各样的的优化的机会。有人抓住机会去提出新的数据模型和查询接口。比如：
 想内存数据库，上redis 想高性能访问KV模型，有rocksDB 想制作树状结构的数据，mongo你值得拥有 想做图分析，有图数据库 想要时序数据，有influxdb和Prometheus这种列存 想做Data Warehouse，有GP、有大规模的并行计算引擎 想做高性能海量数据存储，但是访问的方式相对简单，可以上Hadoop全家桶，Spark全家桶 想做海量数据的KV，有HBase，Cassandra ……  就连SQL自己也在演进，比如各大数据库增加了对json格式的支持，MySQL还搞了个X-API，弄得像mongo一样；Postgres中一列可以是复合的类型（类似于struct），也可以是数组类型。mysql和postgres还支持全文索引（按照王垠的讲法，是不是这时候得先用一套LSM tree库玩转sstable管理，然后再攒一个lucene做分词和倒排？）
根据实际需求，从上面这些备选中，总能找到几个东西组合在一起满足需要。如果还不够用，那就按照需求定制，就像polarDB，TiDB。但我相信，绝大部分的开发场景，弄个mysql，sqlite之类的就完事了，不需要特别仔细的优化。
遇到了SQL处理不了的，有价值的问题，去解决，去优化，去建模就好。光吐槽SQL这也不行，那也不行，没有任何卵用。</description>
    </item>
    
    <item>
      <title>MySQL 数据库迁移</title>
      <link>https://blog.v5u.win/post/system-mysql-change/</link>
      <pubDate>Thu, 15 Dec 2016 14:21:18 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/system-mysql-change/</guid>
      <description> mac 下迁移数据库的结构和内容 迁移准备：数据库文件（可用工具导出Mysql文件）
注意：由于文件权限的问题 可能不能进入Mysql的data文件内  进入文件 /usr/local/mysql/data 如果打不开，修改文件访问权限，（右击，显示简介，修改文件读写权限） 将相应的文件(如：MYD,MYI,frm) copy进合适的数据库内（文件夹） 打开数据库，查看迁移情况  </description>
    </item>
    
    <item>
      <title>mac下MongoDB</title>
      <link>https://blog.v5u.win/post/mac-bmongodb/</link>
      <pubDate>Mon, 18 Jul 2016 18:16:11 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-bmongodb/</guid>
      <description>1. 安装 1.1 解压缩mongo文件，将解压缩后的文件移动到自己喜欢的目录下 1.2 由于没有配置环境变量，先测试使用。 终端进入mongodb的安装路径，在bin路径下，执行./mongod启动数据库
有可能报错 exception in initAndListen: 29 Data directory /data/db not found 这是因为/data/db 目录不存在，若启动时，不指定任何参数， MongoDB 会默认使用 /data/db 目录存储数据， 我们可以使用 &amp;ndash;dbpath 来指定其它的路径，比如我使用的是下面这样的命令启动的： ./mongod --dbpath ../data/db 新开一个终端，在bin路径下执行./mongo启动mongodb管理
2. 使用 show dbs 显示 数据库s use dbName 切换数据库 show collections 数据库下的显示表 db.表明.find() 显示表中数据</description>
    </item>
    
  </channel>
</rss>