<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>消息队列 on 为吾优</title>
    <link>https://blog.v5u.win/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/</link>
    <description>Recent content in 消息队列 on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 23 Aug 2019 09:39:55 +0800</lastBuildDate>
    
	<atom:link href="https://blog.v5u.win/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>System MQ消息队列</title>
      <link>https://blog.v5u.win/post/system-mq%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/</link>
      <pubDate>Fri, 23 Aug 2019 09:39:55 +0800</pubDate>
      
      <guid>https://blog.v5u.win/post/system-mq%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/</guid>
      <description>[TOC]
消息队列 MQ 能随便讲个应用场景嘛
发短信，发邮件
大量的定时任务
支付回调也经常用
你付款之后有很多步骤
主要是付款是异步过程。
你打钱，支付宝服务器通知电商后台服务器
然后电商后台接到请求后，发送一个消息去队列里，带上订单信息
然后服务器集群里有人接活
咏闲 09:29:17 感觉说的是放入消息队列，然后被轮流接受，异步处理各个服务
橙卡 09:29:38 比如购买流程很长的 橙卡 09:29:55 库存管理 账目转移 物流发货
橙卡 09:30:09 要是在线等待起码半分钟
橙卡 09:30:30 一般是拆成好几个任务 橙卡 09:30:34 一个一个来
橙卡 09:30:53 最主要是有一个对等集群，可以容纳一切任务
橙卡 09:30:59 平等的处理
橙卡 09:31:46 我之前一直用的redis作为mq
橙卡 09:31:53 其实也还好。
橙卡 09:32:01 也就三四个月丢一单</description>
    </item>
    
  </channel>
</rss>