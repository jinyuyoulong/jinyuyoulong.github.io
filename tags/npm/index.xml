<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>npm on 为吾优</title>
    <link>https://blog.v5u.win/tags/npm/</link>
    <description>Recent content in npm on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 20 Apr 2018 05:00:32 +0000</lastBuildDate>
    
	<atom:link href="https://blog.v5u.win/tags/npm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>brew gem npm cocoapods</title>
      <link>https://blog.v5u.win/post/mac-brew-gem-npm-cocoapods/</link>
      <pubDate>Fri, 20 Apr 2018 05:00:32 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-brew-gem-npm-cocoapods/</guid>
      <description>Mac上的包管理器 常用的有：brew gem npm cocoapods pip3
 brew 用来管理Unix相关工具软件，就像centos之于yum，Ubuntu之于apt-get gem 即RubyGems,管理ruby社区的软件包。 npm 是nodejs的包管理器，用来管理nodejs社区的软件包。 pip 是Python的包管理器，用来管理Python社区的软件包 cocoapods 是iOS开发的包管理器，用来管理iOS代码包  </description>
    </item>
    
    <item>
      <title>mac下nvm 使用记录</title>
      <link>https://blog.v5u.win/post/mac-nvm/</link>
      <pubDate>Tue, 02 May 2017 10:29:55 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-nvm/</guid>
      <description>mac下nvm 使用记录 断开连接 brew unlink nvm 安装 brew install nvm 环境变量 add to ~/.bash_profile export NVM_DIR=&amp;ldquo;$HOME/.nvm&amp;rdquo; . &amp;ldquo;$(brew &amp;ndash;prefix nvm)/nvm.sh&amp;rdquo; 配置国内镜像源 export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist 配置npm镜像源 创建 ~/.npmrc 写入registry=https://registry.npm.taobao.org 更新环境变量 . ~/.bash_profile
查看可安装的nodejs版本 nvm ls-remote 安装node nvm install
删除版本 nvm uninstall v6 查看 nvm ls 切换nvm use //只针对当前shall 设置默认 nvm alias default v7
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>mac下npm的使用方式</title>
      <link>https://blog.v5u.win/post/mac-npm/</link>
      <pubDate>Thu, 08 Sep 2016 14:30:11 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-npm/</guid>
      <description>npm init #创建package.json文件 npm install xxx -g #全局安装 -g npm install xxx #没有package.json文件的时候使用，当前文件下安装 npm install xxx --save #添加到package.json中的dependencies配置中 npm install xxx --save-dev #添加到package.json中devDependencies配置中 npm uninstall xxx 删除包 npm ls #查看当前目录中已安装的包 -g 全局 npm update xxx #单包更新 npm search xxx #搜索 npm ls xxx 查看xxx包的版本信息 npm ls --depth 0 #查看安装包列表 npm prune -x #删除多余的包 npm ls -g --depth xxx #查看全局npm版本  </description>
    </item>
    
  </channel>
</rss>