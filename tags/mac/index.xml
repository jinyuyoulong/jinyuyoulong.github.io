<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on 为吾优</title>
    <link>https://jinyuyoulong.github.io/tags/mac/</link>
    <description>Recent content in Mac on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 30 Jun 2018 08:57:11 +0000</lastBuildDate>
    
	<atom:link href="https://jinyuyoulong.github.io/tags/mac/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mac虚拟机上的centos 7实现ssh连接</title>
      <link>https://jinyuyoulong.github.io/763.html</link>
      <pubDate>Sat, 30 Jun 2018 08:57:11 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/763.html</guid>
      <description>mac虚拟机上的centos7实现ssh连接
 查看是否安装ssh rpm -qa | grep ssh（一般都内置了）
 配置sshd_config文件 /etc/ssh/sshd_config
Port 22
ListenAddress 0.0.0.0
ListenAddress ::
 防火墙配置
 安装iptables: yum install iptables-service 配置防火墙文件：vim /etc/sysconfig/iptables 关闭防火墙：systemctl restart iptables.service systemctl enable iptables.service //设置防火墙开机启动   安装netstat：yum install net-tools （查看监听端口：netstat -ntpl | grep 22）
 关闭虚拟机，设置虚拟机网络为host-only方式，virtualbox需要设置全局设置
 cmd+,-&amp;gt;网络-&amp;gt;仅主机(host-only)网络 添加网络   查看虚拟机ip地址，ip ip addr
 主机找到可以ping 通的ip
 ssh登录 ssh root@192.168.xx.xx
  </description>
    </item>
    
    <item>
      <title>mac 如何使用wget</title>
      <link>https://jinyuyoulong.github.io/post/mac-wget/</link>
      <pubDate>Sat, 21 Jan 2017 23:38:52 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/mac-wget/</guid>
      <description>下载单个文件， 为什么不用mac原生自带的工具：curl &amp;ldquo;网址链接&amp;rdquo; -o &amp;ldquo;输出文件名&amp;rdquo; 解释一下，wget是Linux下自带的文件下载工具非常好用，mac下还是推荐使用原生。 呵呵哒，也许我是一片假的教程文章。</description>
    </item>
    
    <item>
      <title>mac下wireshark的使用方法</title>
      <link>https://jinyuyoulong.github.io/post/mac-wireshark/</link>
      <pubDate>Wed, 18 May 2016 18:47:09 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/mac-wireshark/</guid>
      <description>Wireshark是mac下一款非常好的抓包工具，安装我就不说了，下面我重点来说说如何使用。 1.打开终端 2.rvictl -s  // 创建一个虚拟接口 3.打开Wireshark，点击设置按钮，选择rvi0接口 4.开始调试
通过 RVI 抓取 iPhone 数据包 （1）RVI 简介 使用 Mac 抓取 iPhone 数据包可通过共享和代理两种方式： 使用 Mac 的网络共享功能将 Mac 的网络通过 WiFi 共享给 iPhone 连接； 使用代理软件（例如 Charles）在Mac上建立HTTP代理服务器。 这两种方式都是将 iPhone 的网络流量导入到 Mac 电脑中，通过 Mac 连接互联网。这就要求 Mac 本身是联网的，对于网络共享的方式还要求 Mac 本身的网络不能使用 WiFi，而且在 iPhone 上只能使用 WiFi 连接，无法抓取到 xG（2G/3G/4G） 网络包。 苹果在 iOS 5 中新引入了“远程虚拟接口（Remote Virtual Interface,RVI）”的特性，可以在 Mac 中建立一个虚拟网络接口来作为 iOS 设备的网络栈，这样所有经过 iOS 设备的流量都会经过此虚拟接口。此虚拟接口只是监听 iOS 设备本身的协议栈（但并没有将网络流量中转到 Mac 本身的网络连接上），所有网络连接都是 iOS 设备本身的，与 Mac 电脑本身联不联网或者联网类型无关。iOS设备本身可以为任意网络类型（WiFi/xG），这样在 Mac 电脑上使用任意抓包工具（tcpdump、Wireshark、CPA）抓取 RVI 接口上的数据包就实现了对 iPhone 的抓包。</description>
    </item>
    
    <item>
      <title>用 Xcode 编写 C/C&#43;&#43; 的 Hello World！</title>
      <link>https://jinyuyoulong.github.io/post/xcode-cc&#43;&#43;/</link>
      <pubDate>Fri, 25 Sep 2015 12:24:51 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/xcode-cc&#43;&#43;/</guid>
      <description>操作步骤：
 打开Xcode，在欢迎界面点击Create a new Xcode project。
 在左侧栏选择Mac OS X分类的Application，右侧选择Command Line Tool(命令行程序)，点击Next。
 在Product Name填写项目名称，如HelloMac，其余默认即可（type里也可以选择C或C++），点击Next后选择路径并点击Create完成项目创建。
 在Xcode主界面左侧点击main.m，把代码替换成C/C++的代码，点击左上角的Run按钮即可编译运行，界面下方会弹出控制台显示运行结果。
  </description>
    </item>
    
  </channel>
</rss>