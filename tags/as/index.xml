<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>as on 为吾优</title>
    <link>https://jinyuyoulong.github.io/tags/as/</link>
    <description>Recent content in as on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 26 Oct 2016 13:52:46 +0000</lastBuildDate>
    
	<atom:link href="https://jinyuyoulong.github.io/tags/as/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>as as! as?</title>
      <link>https://jinyuyoulong.github.io/post/swift-as/</link>
      <pubDate>Wed, 26 Oct 2016 13:52:46 +0000</pubDate>
      
      <guid>https://jinyuyoulong.github.io/post/swift-as/</guid>
      <description>Swift开发之 is、 as、as!、as?三种类型转换操作符
1，as使用场合
（1）从派生类转换为基类，向上转型（upcasts）
class Animal {} class Cat: Animal {} let cat = Cat() let animal = cat as Animal
（2）消除二义性，数值类型转换
let num1 = 42 as CGFloat let num2 = 42 as Int let num3 = 42.5 as Int let num4 = (42 / 2) as Double
（3）switch 语句中进行模式匹配
如果不知道一个对象是什么类型，你可以通过switch语法检测它的类型，并且尝试在不同的情况下使用对应的类型进行相应的处理。
switch animal { case let cat as Cat: print(&amp;ldquo;如果是Cat类型对象，则做相应处理&amp;rdquo;) case let dog as Dog: print(&amp;ldquo;如果是Dog类型对象，则做相应处理&amp;rdquo;) default: break }</description>
    </item>
    
  </channel>
</rss>