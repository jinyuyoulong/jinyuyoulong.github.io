<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terminal on 为吾优</title>
    <link>https://blog.v5u.win/tags/terminal/</link>
    <description>Recent content in terminal on 为吾优</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 12 Jul 2018 02:38:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.v5u.win/tags/terminal/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>iterm比terminal好在哪里？</title>
      <link>https://blog.v5u.win/779.html</link>
      <pubDate>Thu, 12 Jul 2018 02:38:00 +0000</pubDate>
      
      <guid>https://blog.v5u.win/779.html</guid>
      <description>iterm比terminal好在哪里？ 为什么要用iterm  多窗口切换 command + T 同个窗口横向分屏 command + d 同个窗口，竖向分屏 command + shift + d 自动补齐命令 comm + ; 直接打开文件 按住command键并点击文件名 (ps: terminal用open命令也可以) 自动复制 直接双击需要复制的文字，即可自动复制 设置主题配色 在偏好设置里进行一些基本的颜色设置，在GitHub上下载做好的主题，导入。 (ps: 成品自由度高👍，合心意的需要手动配置-&amp;gt;terminal也可以手动配置)  这么好的东西我还是用terminal好了。</description>
    </item>
    
    <item>
      <title>terminal的显示增加色彩</title>
      <link>https://blog.v5u.win/682.html</link>
      <pubDate>Wed, 04 Apr 2018 10:16:29 +0000</pubDate>
      
      <guid>https://blog.v5u.win/682.html</guid>
      <description>打开 .bash_profile文件，添加：
export GREP_OPTIONS=‘—-color=auto’ #如果没有指定，则自动选择颜色 export CLICOLOR=1 #是否输出颜色 export LSCOLORS=Bxfxcxdxbxegedabagacad#指定颜色  LSCOLORS此变量的值描述使用 CLICOLOR 启用颜色时要使用哪种属性的颜色 。该字符串是 fb格式对的串联，其中f是前景色，b是 背景色。
颜色代号如下：
a黑色 b红色 c绿色 d棕色 e蓝色 f洋红色 g青色 h浅灰色 黑色粗体，通常显示为深灰色 B粗体红色 C粗体绿色 D粗体棕色，通常显示为黄色 E粗体蓝色 F粗体洋红色 G加粗青色 H加粗浅灰色; 看起来像明亮的白色 x默认前景或背景
请注意，以上是标准的ANSI颜色。实际 显示可能根据 使用中的终端的颜色能力而不同。
属性的顺序如下：
1.目录 2.符号链接 3.套接字 4.管道 5.可执行 6.块特殊 7.字符特殊 8.可执行与setuid位设置 9.可执行与setgid位设置 10.目录可写给其他人，粘性位 11。目录可写给其他人，没有粘性 位
默认为“exfxcxdxbxegedabagacad”，即 常规目录的 蓝色前景和默认背景，setuid执行的黑色前景和红色背景 等。</description>
    </item>
    
    <item>
      <title>mac文件权限修改</title>
      <link>https://blog.v5u.win/post/mac-file-right-change/</link>
      <pubDate>Mon, 13 Mar 2017 17:20:42 +0000</pubDate>
      
      <guid>https://blog.v5u.win/post/mac-file-right-change/</guid>
      <description>文件或目录的访问权限分为只读，只写和可执行三种。 文件被创建时，文件所有者自动拥有对该文件的读、写和可执行权限，以便于对文件的阅读和修改。 有三种不同类型的用户可对文件或目录进行访问：文件所有者，同组用户、其他用户。
用ls -l命令显示文件或目录的详细信息，最左边的一列为文件的访问权限
例:
$ ls -l script.swift
-rw-r--r-- 1 fans staff 39 3 13 16:16 script.swift
横线代表空许可。r代表只读，w代表写，x代表可执行
这里共有10个位置。第一个字符指定了文件类型。 在通常意义上，一个目录也是一个文件。如果第一个字符是横线，表示是一个非目录的文件。如果是d，表示是一个目录。
   - rw- r-- r--     普通文件 文件主 组用户 其他用户    是文件script.swift 的访问权限，表示script.swift是一个普通文件； script.swift的属主有读写权限；与script.swift属主同组的用户只有读权限；其他用户也只有读权限。
chmod 命令 功能：用于改变文件或目录的访问权限.用户用它控制文件或目录的访问权限. 语法：该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。
 文字设定法
chmod u+x script.swift
[详情点一下][http://blog.csdn.net/nitghost/article/details/4224034]
 数字设定法
略。。。知道那么多干嘛，一种还不够你用的！^_^
  swift研究学习</description>
    </item>
    
  </channel>
</rss>