{
    "title": "如何避免在Block里用self造成循环引用",
    "date": "2015-05-15 16:00:00 +0000 UTC",
    "type": "post",
    "permalink" : "http://blog.v5u.win/post/ios-%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%9C%A8block%E9%87%8C%E7%94%A8self%E9%80%A0%E6%88%90%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8/index.json",
    "summary" : "本文原引于Bannings的专栏博客
一般来说我们总会在设置Block之后，在合适的时间回调Block，而不希望回调Block的时候Block已经被释放了，所以我们需要对Block进行copy，copy到堆中，以便后用。
当一个Block被Copy的时候，如果你在Block里进行了一些调用，那么将会有一个强引用指向这些调用方法的调用者，有两个规则：
 如果你是通过引用来访问一个实例变量，那么将强引用至self
 如果你是通过值来访问一个实例变量，那么将直接强引用至这个“值”变量
  苹果官方文档里有两个例子来说明这两种情况：
上面第一种情况相当于用self.xxx来访问实例变量，所以强引用指向了self；第二种情况把实例变量变成了本地临时变量，强引用将直接指向这个本地的临时变量。大多数情况下，我们只用处理第一种情况就行了，因为第二种情况虽然会造成循环引用，但是临时变量很快就被释放了，不会造成真正的循环引用。要避免强引用到self的话，用__weak把self重新引用一下就行了，像这样：
 __weak&nbsp;ViewController&nbsp;*weakSelf&nbsp;=&nbsp;self; &nbsp;  "
}