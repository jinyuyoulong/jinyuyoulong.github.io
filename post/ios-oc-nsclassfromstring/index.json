{
    "title": "Objective-c NSClassFromString 使用方法",
    "date": "2015-09-14 11:58:58 +0000 UTC",
    "type": "post",
    "permalink" : "http://blog.v5u.win/post/ios-oc-nsclassfromstring/index.json",
    "summary" : "NSClassFromString 是一个很有用的东西，尤其在进行 iPhone toolchain 的开发上。
正常来说， id&nbsp;myObj&nbsp;=&nbsp;[[NSClassFromString(@&quot;MySpecialClass&quot;)&nbsp;alloc]&nbsp;init];
和 id&nbsp;myObj&nbsp;=&nbsp;[[MySpecialClass&nbsp;alloc]&nbsp;init];
是一样的。但是，如果你的程序中并不存在 MySpecialClass 这个类，下面的写法会出错，而上面的写法只是返回一个空对象而已。
因此，在某些情况下，可以使用&nbsp;NSClassFromString&nbsp;来进行你不确定的类的初始化。
比如在 iPhone 中，NSTask 可能就会出现这种情况，所以在你需要使用 NSTask 时，最好使用： [[NSClassFromString(@&quot;NSTask&quot;)&nbsp;&hellip;..]]
而不要直接使用&nbsp;[NSTask ...]&nbsp;这种写法。
NSClassFromString 的好处是：
 弱化连接，因此并不会把没有的 Framework 也 link 到程序中。
 不需要使用 import，因为类是动态加载的，只要存在就可以加载。因此如果你的 toolchain 中没有某个类的头文件定义，而你确信这个类是可以用的，那么也可以用这种方法
  Posted by&nbsp;陈斌彬&nbsp;Jul&nbsp;2nd,&nbsp;2015&nbsp;9:30 am&nbsp;&nbsp;[objective-c](http://cnbin.github.io/blog/categories/objective-c/)  "
}