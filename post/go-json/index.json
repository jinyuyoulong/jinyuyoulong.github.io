{
    "title": "Go JSON",
    "date": "0001-01-01 00:00:00 +0000 UTC",
    "type": "post",
    "permalink" : "http://blog.v5u.win/post/go-json/index.json",
    "summary" : "标准库
encoding/json、encoding/xml、encoding/asn1  Model
type Movie struct { Title string Year int `json:&quot;released&quot;` Color bool `json:&quot;color,omitempty&quot;` Actors []string } // 赋值 var movies = []Movie{ {Title: &quot;Casablanca&quot;, Year: 1942, Color: false, Actors: []string{&quot;Humphrey Bogart&quot;, &quot;Ingrid Bergman&quot;}}, {Title: &quot;Cool Hand Luke&quot;, Year: 1967, Color: true, Actors: []string{&quot;Paul Newman&quot;}}, {Title: &quot;Bullitt&quot;, Year: 1968, Color: true, Actors: []string{&quot;Steve McQueen&quot;, &quot;Jacqueline Bisset&quot;}}, }  在编码时，默认使用Go语言结构体的成员名字作为JSON的对象（通过reflect反射技术，我们将在12.6节讨论）。只有导出的结构体成员才会被编码，这也就是我们为什么选择用大写字母开头的成员名称。
即使对应的JSON对象名是小写字母，每个结构体的成员名也是声明为大写字母开头的。因为有些JSON成员名字和Go结构体成员名字并不相同，因此需要Go语言结构体成员Tag来指定对应的JSON名字。同样，在解码的时候也需要做同样的处理，"
}